[{"P:\\Diploma\\frontend\\src\\reportWebVitals.ts":"1","P:\\Diploma\\frontend\\src\\store\\ducks\\user\\selectors.ts":"2","P:\\Diploma\\frontend\\src\\store\\types.ts":"3","P:\\Diploma\\frontend\\src\\api\\playlistsApi.ts":"4","P:\\Diploma\\frontend\\src\\components\\Logo\\index.js":"5","P:\\Diploma\\frontend\\src\\components\\ModalBlock\\index.tsx":"6","P:\\Diploma\\frontend\\src\\pages\\MyPlaylists.jsx":"7","P:\\Diploma\\frontend\\src\\components\\ModalAddPlaylist\\index.tsx":"8","P:\\Diploma\\frontend\\src\\api\\authApi.ts":"9","P:\\Diploma\\frontend\\src\\store\\ducks\\user\\reducer.ts":"10","P:\\Diploma\\frontend\\src\\store\\ducks\\user\\contracts\\actionTypes.ts":"11","P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\selectors.ts":"12","P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\contracts\\actionTypes.ts":"13","P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\actionCreators.ts":"14","P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\reducer.ts":"15","P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\contracts\\state.ts":"16","P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\sagas.ts":"17","P:\\Diploma\\frontend\\src\\index.tsx":"18","P:\\Diploma\\frontend\\src\\store\\ducks\\user\\actionCreators.ts":"19","P:\\Diploma\\frontend\\src\\components\\Notification\\index.tsx":"20","P:\\Diploma\\frontend\\src\\components\\Playlist\\Playlist.tsx":"21","P:\\Diploma\\frontend\\src\\components\\Popover\\index.tsx":"22","P:\\Diploma\\frontend\\src\\store\\ducks\\user\\sagas.ts":"23","P:\\Diploma\\frontend\\src\\pages\\Home.jsx":"24","P:\\Diploma\\frontend\\src\\core\\axios.ts":"25","P:\\Diploma\\frontend\\src\\components\\index.js":"26","P:\\Diploma\\frontend\\src\\components\\SignInForm\\index.tsx":"27","P:\\Diploma\\frontend\\src\\pages\\MyVideos.jsx":"28","P:\\Diploma\\frontend\\src\\components\\Header\\index.js":"29","P:\\Diploma\\frontend\\src\\api\\videosApi.ts":"30","P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\reducer.ts":"31","P:\\Diploma\\frontend\\src\\store\\store.ts":"32","P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\saga.ts":"33","P:\\Diploma\\frontend\\src\\store\\rootReducer.ts":"34","P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\actionCreators.ts":"35","P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\contacts\\actionTypes.ts":"36","P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\ActionCreators.ts":"37","P:\\Diploma\\frontend\\src\\components\\VideoListItem\\index.tsx":"38","P:\\Diploma\\frontend\\src\\App.tsx":"39","P:\\Diploma\\frontend\\src\\pages\\VideoPage.jsx":"40","P:\\Diploma\\frontend\\src\\api\\commentApi.ts":"41","P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\contracts\\actionTypes.ts":"42","P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\saga.ts":"43","P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\reducer.ts":"44","P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\ActionCreators.ts":"45","P:\\Diploma\\frontend\\src\\components\\RegisterModal\\index.tsx":"46","P:\\Diploma\\frontend\\src\\components\\Comment\\index.tsx":"47","P:\\Diploma\\frontend\\src\\utils\\formatDate.ts":"48","P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\selectors.ts":"49","P:\\Diploma\\frontend\\src\\components\\MainMenu\\index.tsx":"50","P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\selectors.ts":"51","P:\\Diploma\\frontend\\src\\pages\\UsersPage.jsx":"52","P:\\Diploma\\frontend\\src\\components\\UsersItem\\index.tsx":"53","P:\\Diploma\\frontend\\src\\store\\saga.ts":"54","P:\\Diploma\\frontend\\src\\api\\subscribeApi.ts":"55","P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\contracts\\actionTypes.ts":"56","P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\actionCreators.ts":"57","P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\sagas.ts":"58","P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\reducer.ts":"59","P:\\Diploma\\frontend\\src\\components\\UserHeader\\index.tsx":"60","P:\\Diploma\\frontend\\src\\components\\PopoverHeader\\index.tsx":"61","P:\\Diploma\\frontend\\src\\pages\\Auth.tsx":"62","P:\\Diploma\\frontend\\src\\pages\\MyProfile.tsx":"63","P:\\Diploma\\frontend\\src\\pages\\ProfileForVisit.jsx":"64","P:\\Diploma\\frontend\\src\\pages\\SubscribePage.jsx":"65","P:\\Diploma\\frontend\\src\\components\\SubscribeItem\\index.tsx":"66","P:\\Diploma\\frontend\\src\\pages\\FeedPage.jsx":"67","P:\\Diploma\\frontend\\src\\components\\PopularItem\\index.tsx":"68","P:\\Diploma\\frontend\\src\\pages\\ChartPage.tsx":"69","P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\selectors.ts":"70","P:\\Diploma\\frontend\\src\\pages\\VerifyPage.tsx":"71"},{"size":425,"mtime":1607556743000,"results":"72","hashOfConfig":"73"},{"size":864,"mtime":1609172586327,"results":"74","hashOfConfig":"73"},{"size":149,"mtime":1607556743000,"results":"75","hashOfConfig":"73"},{"size":1482,"mtime":1609279756168,"results":"76","hashOfConfig":"73"},{"size":332,"mtime":1607956792167,"results":"77","hashOfConfig":"73"},{"size":1026,"mtime":1607556743000,"results":"78","hashOfConfig":"73"},{"size":6084,"mtime":1609357865112,"results":"79","hashOfConfig":"73"},{"size":12103,"mtime":1609357965943,"results":"80","hashOfConfig":"73"},{"size":1642,"mtime":1609374631903,"results":"81","hashOfConfig":"73"},{"size":1703,"mtime":1609172420237,"results":"82","hashOfConfig":"73"},{"size":2223,"mtime":1609172083290,"results":"83","hashOfConfig":"73"},{"size":965,"mtime":1609109930478,"results":"84","hashOfConfig":"73"},{"size":2520,"mtime":1609108371570,"results":"85","hashOfConfig":"73"},{"size":2581,"mtime":1609108507874,"results":"86","hashOfConfig":"73"},{"size":2512,"mtime":1609109711999,"results":"87","hashOfConfig":"73"},{"size":594,"mtime":1609109657955,"results":"88","hashOfConfig":"73"},{"size":3490,"mtime":1607904446027,"results":"89","hashOfConfig":"73"},{"size":671,"mtime":1607556743000,"results":"90","hashOfConfig":"73"},{"size":2226,"mtime":1609172188882,"results":"91","hashOfConfig":"73"},{"size":942,"mtime":1607556743000,"results":"92","hashOfConfig":"73"},{"size":3910,"mtime":1609169394374,"results":"93","hashOfConfig":"73"},{"size":1966,"mtime":1608042450761,"results":"94","hashOfConfig":"73"},{"size":2072,"mtime":1608771146568,"results":"95","hashOfConfig":"73"},{"size":1398,"mtime":1609089929174,"results":"96","hashOfConfig":"73"},{"size":179,"mtime":1607556743000,"results":"97","hashOfConfig":"73"},{"size":192,"mtime":1607556743000,"results":"98","hashOfConfig":"73"},{"size":5000,"mtime":1609360660371,"results":"99","hashOfConfig":"73"},{"size":2590,"mtime":1608911978920,"results":"100","hashOfConfig":"73"},{"size":378,"mtime":1607556743000,"results":"101","hashOfConfig":"73"},{"size":904,"mtime":1608825985473,"results":"102","hashOfConfig":"73"},{"size":1266,"mtime":1608128897966,"results":"103","hashOfConfig":"73"},{"size":1089,"mtime":1608730817164,"results":"104","hashOfConfig":"73"},{"size":1840,"mtime":1608149976499,"results":"105","hashOfConfig":"73"},{"size":640,"mtime":1608730757144,"results":"106","hashOfConfig":"73"},{"size":790,"mtime":1607986246534,"results":"107","hashOfConfig":"73"},{"size":1354,"mtime":1608146960262,"results":"108","hashOfConfig":"73"},{"size":1472,"mtime":1608150524695,"results":"109","hashOfConfig":"73"},{"size":3564,"mtime":1609173518709,"results":"110","hashOfConfig":"73"},{"size":1640,"mtime":1609367204652,"results":"111","hashOfConfig":"73"},{"size":5127,"mtime":1609362686786,"results":"112","hashOfConfig":"73"},{"size":529,"mtime":1608492413711,"results":"113","hashOfConfig":"73"},{"size":1443,"mtime":1608492650443,"results":"114","hashOfConfig":"73"},{"size":1583,"mtime":1608518653656,"results":"115","hashOfConfig":"73"},{"size":985,"mtime":1608492748727,"results":"116","hashOfConfig":"73"},{"size":1561,"mtime":1608492668987,"results":"117","hashOfConfig":"73"},{"size":8071,"mtime":1609119722400,"results":"118","hashOfConfig":"73"},{"size":2183,"mtime":1608911249693,"results":"119","hashOfConfig":"73"},{"size":241,"mtime":1608475695378,"results":"120","hashOfConfig":"73"},{"size":436,"mtime":1608330135641,"results":"121","hashOfConfig":"73"},{"size":2395,"mtime":1609169272478,"results":"122","hashOfConfig":"73"},{"size":410,"mtime":1607990702035,"results":"123","hashOfConfig":"73"},{"size":5084,"mtime":1609179426633,"results":"124","hashOfConfig":"73"},{"size":4088,"mtime":1609280137400,"results":"125","hashOfConfig":"73"},{"size":443,"mtime":1608602090629,"results":"126","hashOfConfig":"73"},{"size":737,"mtime":1608940587011,"results":"127","hashOfConfig":"73"},{"size":1445,"mtime":1608651515335,"results":"128","hashOfConfig":"73"},{"size":1340,"mtime":1608661256834,"results":"129","hashOfConfig":"73"},{"size":1505,"mtime":1608661837040,"results":"130","hashOfConfig":"73"},{"size":931,"mtime":1608658829315,"results":"131","hashOfConfig":"73"},{"size":834,"mtime":1608761609531,"results":"132","hashOfConfig":"73"},{"size":3985,"mtime":1608730330807,"results":"133","hashOfConfig":"73"},{"size":2511,"mtime":1609360885654,"results":"134","hashOfConfig":"73"},{"size":10091,"mtime":1609030587459,"results":"135","hashOfConfig":"73"},{"size":8541,"mtime":1608948631309,"results":"136","hashOfConfig":"73"},{"size":1904,"mtime":1609275636685,"results":"137","hashOfConfig":"73"},{"size":1907,"mtime":1608948864536,"results":"138","hashOfConfig":"73"},{"size":3223,"mtime":1609120014477,"results":"139","hashOfConfig":"73"},{"size":2177,"mtime":1609031829709,"results":"140","hashOfConfig":"73"},{"size":3558,"mtime":1609120842186,"results":"141","hashOfConfig":"73"},{"size":306,"mtime":1608603099744,"results":"142","hashOfConfig":"73"},{"size":2385,"mtime":1609376783818,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"vr14w4",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"172"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"206"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"169"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"212"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"169"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"212"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"152"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"149"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"186"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"319"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"152"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"149"},"P:\\Diploma\\frontend\\src\\reportWebVitals.ts",[],["338","339"],"P:\\Diploma\\frontend\\src\\store\\ducks\\user\\selectors.ts",[],["340","341"],"P:\\Diploma\\frontend\\src\\store\\types.ts",[],["342","343"],"P:\\Diploma\\frontend\\src\\api\\playlistsApi.ts",[],"P:\\Diploma\\frontend\\src\\components\\Logo\\index.js",[],["344","345"],"P:\\Diploma\\frontend\\src\\components\\ModalBlock\\index.tsx",[],"P:\\Diploma\\frontend\\src\\pages\\MyPlaylists.jsx",["346","347","348"],"import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react'\nimport Playlist from '../components/Playlist/Playlist';\nimport { fetchMyPlaylistsData, SearchPlaylist } from '../store/ducks/playlists/actionCreators';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport styles from './MyPlaylists.module.scss'\nimport { SelectMyPlaylists, SelectMyPlaylistsStatus, SelectAddFormState, SelectDeleteFormState, SelectUpdateFormState, SelectSearch  } from '../store/ducks/playlists/selectors';\nimport { Typography, IconButton, TextField } from '@material-ui/core';\nimport ModalAddPlaylist from '../components/ModalAddPlaylist';\nimport { FormState } from '../store/ducks/playlists/contracts/state';\nimport { selectUserData } from '../store/ducks/user/selectors';\nimport { createStyles, makeStyles,Theme } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n    Header_title: {\n       fontWeight: '500',\n       fontSize: '26px',\n       fontFamily: 'Roboto Condensed',\n       lineHeight: '20px'\n    },\n    btn: {\n      marginLeft: '50px'\n    },\n    textField: {\n      position: 'absolute',\n      left: '200px',\n      top: '-5px',\n      // marginLeft: '80px',\n      // marginTop: '-5px',\n      background: '#2D2D3A',\n      width: '430px',\n      borderRadius: '15px',\n      '& .MuiInputBase-input': {\n          background: '#2D2D3A',\n          color: '#ffffff',\n          marginBottom: '0px',\n          borderRadius: '15px',\n          paddingLeft: '12px'\n      },\n      '& .MuiInput-underline:after': {\n          bottom: '-10px',\n          borderBottom: '1px solid #ffffff'\n      },\n      '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n          borderBottom: 'none'\n      },\n      '& .MuiInput-underline:before': {\n          border: 'none'\n      }\n  },\n  }),\n);\n\nconst MyPlaylists = () => {\n    const classes = useStyles(); \n    const [modalAdd, setmodalAdd] = React.useState(false);\n    const [searchMode, setseatchMode] = React.useState(false);\n    const handleOpen = () => {\n        setmodalAdd(true);\n      };\n    \n      const handleClose = () => {\n        setmodalAdd(false);\n      };\n\n    const dispatch = useDispatch();\n    const Status = useSelector(SelectMyPlaylistsStatus);\n    let items = useSelector(SelectMyPlaylists);\n    let searchItems = useSelector(SelectSearch);\n    const AddStatus = useSelector(SelectAddFormState);\n    const DeleteStatus = useSelector(SelectDeleteFormState);\n    const UserData = useSelector(selectUserData);\n    let myID;\n    if (UserData) {\n        myID = UserData._id;\n    }\n      console.log(items);\n    //костыль надо исправить\n    const UpdateStatus = useSelector(SelectUpdateFormState);\n    const [hideSearch, sethideSearch] = React.useState(true);\n    const [updateStatusLocal, setupdateStatusLocal] = React.useState(false);\n\n\n    \n    const handleSearch= (e) => {\n       dispatch(SearchPlaylist(e.target.value));\n       setseatchMode(true);\n    }\n\n    React.useEffect(() => {\n            dispatch(fetchMyPlaylistsData());\n            setupdateStatusLocal(false);\n    }, [AddStatus, DeleteStatus, updateStatusLocal]);\n\n    const handleUpdateStatus = (state) => {\n        setupdateStatusLocal(state);\n    }\n\n    return (\n        <div className={styles.MyPlaylists}>\n            <div className={styles.container}>\n                <div className={styles.MyPlaylists_header}>\n                    <Typography className={classes.Header_title}> \n                         Мои курсы\n                    </Typography>\n                    <ModalAddPlaylist type=\"AddPlaylist\" open={modalAdd} handleClose={handleClose}/>\n                   <IconButton  onClick={ () => handleOpen()} className={styles.Add_new_course} color=\"primary\">\n                       <AddCircleIcon />\n                   </IconButton >\n                        <IconButton className={styles.Search} color=\"primary\" onClick={ () => sethideSearch(!hideSearch)}>\n                     <SearchIcon />\n                   </IconButton>\n                   <TextField hidden={hideSearch} placeholder=\"Поиск...\" className={classes.textField} onChange={handleSearch}/>\n                </div>\n                {/* {AddStatus === FormState.LOADING ? <div>Loading</div> : <div className={styles.MyPlayLists_items}>\n                 \n                {searchItems && searchItems.length > 0 ? searchItems.map( item => <Playlist handleUpdateStatus={handleUpdateStatus} key={item._id + 123132} isMy={myID === item.owner._id} id={item._id} title={item.title} coverURL={item.coverURL}/>).reverse()\n            : items && searchMode === false ? items.map( item => <Playlist handleUpdateStatus={handleUpdateStatus} key={item._id + 123132} isMy={myID === item.owner._id} id={item._id} title={item.title} coverURL={item.coverURL}/>).reverse()\n            : <div>{searchMode ? \"Не найдено плейлистов по ключевому слову.\": \"В данный момент у вас отсутствуют плейлисты.\"}</div>} \n             </div>}  */}\n              \n              {AddStatus === FormState.LOADING ? <div>Loading</div> : <div className={styles.MyPlayLists_items}>\n\n            {searchItems && searchItems.length > 0 ? searchItems.map( item => <Playlist handleUpdateStatus={handleUpdateStatus} key={item._id + 123132} isMy={myID === item.owner._id} id={item._id} title={item.title} coverURL={item.coverURL}/>).reverse()\n            : items.length > 0 && searchMode === false  ? items.map( item => <Playlist handleUpdateStatus={handleUpdateStatus} key={item._id + 123132}   id={item._id} title={item.title} coverURL={item.coverURL}/>).reverse()\n            : <div>{searchMode ? \"По ключевому слову ничего не найдено.\" : \"В данный момент у вас отсутствуют плейлисты.\"}</div> }\n             </div>} \n\n              \n            </div>\n\n        </div>\n    )\n}\n\nexport default MyPlaylists\n",["349","350"],"P:\\Diploma\\frontend\\src\\components\\ModalAddPlaylist\\index.tsx",["351","352","353","354","355","356"],"import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { Button, FormControl, FormGroup, TextField, Input, CircularProgress, Typography, Checkbox, FormControlLabel  } from '@material-ui/core';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\n\r\n\r\n\r\n//@ts-ignore\r\nimport styles from './ModalAddPlaylist.modal.scss';\r\n\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchAddPlaylist } from '../../store/ducks/playlists/actionCreators';\r\nimport { fetchAddVideos } from '../../store/ducks/videos/ActionCreators';\r\nimport { Notification } from '../Notification';\r\nimport { Alert } from '@material-ui/lab';\r\nimport classNames from 'classnames';\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      borderRadius: 10\r\n    },\r\n    uploadfiles: {\r\n      marginTop: 15,\r\n    },\r\n    uploadfileText: {\r\n      marginLeft: 15,\r\n      textTransform: 'none'\r\n    },\r\n    checkbox: {\r\n      color: 'rgba(0, 0, 0, 0.8)',\r\n      \r\n      '& .MuiTypography-body1': {\r\n        fontFamily: 'Roboto Condensed',\r\n      },\r\n      '& .MuiFormControlLabel-root': {\r\n        fontFamily: 'Roboto Condensed',\r\n      }\r\n      \r\n    }\r\n  }),\r\n);\r\n\r\ninterface FadeProps {\r\n  children?: React.ReactElement;\r\n  in: boolean;\r\n  onEnter?: () => {};\r\n  onExited?: () => {};\r\n}\r\n\r\n\r\n\r\ninterface ModalProps {\r\n  open: boolean;\r\n  type: string;\r\n  onClose: () => void;\r\n}\r\n\r\nexport interface AddFormProps {\r\n  title: string;\r\n  nameVideo: string;\r\n  discription: string;\r\n  coverURL: string;\r\n  urlVideo: string;\r\n  playlist: string;\r\n  url: string;\r\n}\r\n\r\nconst AddFormSchema = yup.object().shape({\r\n  title: yup.string().min(3, '​Минимальная длина 3 символа').required('Введите название плейлиста'),\r\n});\r\n\r\nexport default function ModalAddPlaylist({open, handleClose, type } : any): React.ReactElement {\r\n  const classes = useStyles();\r\n\r\n   const dispatch = useDispatch();\r\n    const [selectCoverUrl, setselectCoverUrl] = useState('');\r\n    const [statusUpload, setstatusUpload] = useState(true);\r\n    const [error, seterror] = useState(false);\r\n    const [flagModal, setflagModal] = useState('');\r\n    const [statusUploading, setstatusUploading] = useState(false);\r\n     const [isVideourl, setisVideourl] = useState(false);\r\n  \r\n\r\n  const {control, handleSubmit, errors} = useForm<AddFormProps>({\r\n    resolver: yupResolver(AddFormSchema)\r\n})\r\n  \r\n  const onSubmit = (data: AddFormProps) => {\r\n  \r\n      data.coverURL = selectCoverUrl;\r\n  \r\n   \r\n    if (data.coverURL.length > 9) {\r\n      dispatch(fetchAddPlaylist(data));\r\n      setselectCoverUrl('');\r\n      handleClose();\r\n    }\r\n    \r\n\r\n \r\n  }\r\n\r\n  const onRenderedPlaylist = () => {\r\n    setflagModal('AddPlaylist');\r\n  }\r\n\r\n  const onRenderedVideos = () => {\r\n    setflagModal('AddVideo');\r\n  }\r\n\r\n\r\n  const onSubmitVideos = (data: AddFormProps) => {\r\n    console.log(13213);\r\n    console.log(isVideourl);\r\n    console.log(data.urlVideo);\r\n    if (isVideourl) {\r\n      data.url = data.urlVideo;\r\n    }\r\n    else {\r\n      data.url = selectCoverUrl;\r\n    }\r\n\r\n    const searchString =  window.location.href;\r\n    const playlistID = searchString.split('/')[5];\r\n    data.playlist = playlistID;\r\n  \r\n    //@ts-ignore\r\n    if (data.url) {\r\n      dispatch(fetchAddVideos(data));\r\n      setselectCoverUrl('');\r\n      handleClose();\r\n     \r\n    }\r\n  }\r\n  \r\n const uploadImage = async (e: any) => {\r\n    try {\r\n     \r\n        const files = e.target.files;\r\n        const data = new FormData();\r\n        let urlUpload = '';\r\n\r\n        if (flagModal === 'AddVideo') {\r\n          urlUpload = 'video'\r\n        }\r\n        else if (flagModal === 'AddPlaylist') {\r\n          urlUpload = 'image'\r\n        }\r\n      \r\n        setstatusUploading(true);\r\n    data.append('file', files[0]);\r\n    data.append('upload_preset', 'ArtemkaReact');\r\n    const res = await fetch(`https://api.cloudinary.com/v1_1/banancly123/${urlUpload}/upload`, {\r\n        method: 'POST',\r\n        body: data,\r\n      });\r\n      console.log(res);\r\n      if (res.ok) {\r\n        const file = await res.json();\r\n        if (file) {\r\n          setstatusUpload(false)\r\n          setselectCoverUrl(String(file.secure_url));\r\n          setstatusUploading(false);\r\n          \r\n        }\r\n      }\r\n      else {\r\n        seterror(true);\r\n        setstatusUploading(false);\r\n        setTimeout( () => seterror(false), 2000);\r\n        \r\n      }\r\n     \r\n  \r\n   \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Snackbar open={error} anchorOrigin={{  vertical: 'top',\r\n          horizontal: 'center' }}>\r\n      <Alert severity=\"error\" >{flagModal === 'AddPlaylist' ? \"Неверный формат файла. Загрузите изображение jpg/png/gif.\" : \"Неверный формат файла. Загрузите видео.\"}</Alert>\r\n    </Snackbar>\r\n    \r\n    {type === 'AddPlaylist' ? <div>\r\n      <Modal\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onRendered={onRenderedPlaylist}\r\n        onClose={handleClose}\r\n        \r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n          <div className={classes.paper}>\r\n          \r\n          \r\n          <form className={styles.addplaylist_form} onSubmit={handleSubmit(onSubmit)}>\r\n              <FormControl  component=\"fieldset\" fullWidth>\r\n                <FormGroup aria-label=\"position\" row>\r\n                  <Controller\r\n                    as={TextField}\r\n                    control={control}\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                    label=\"Название\"\r\n                    type=\"text\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"filled\"\r\n                    defaultValue=\"\"\r\n                     helperText={errors.title?.message}\r\n                     error={!!errors.title}\r\n                    fullWidth\r\n                    autoFocus\r\n                  />\r\n                    <Controller\r\n                    as={<TextField onInput={uploadImage}/>}\r\n                    control={control}\r\n                    name=\"coverURL\"\r\n                    id=\"coverURL\"\r\n                    label=\"Превью плейлиста\"\r\n                    className={classes.uploadfiles}\r\n                    type=\"file\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    InputProps={\r\n                      {\r\n                        accept: \"image/*\"\r\n                      }\r\n                    }\r\n                    variant=\"filled\"\r\n                    defaultValue=\"\"\r\n                     helperText={errors.coverURL?.message}\r\n                     error={!!errors.coverURL}\r\n                    fullWidth\r\n                    autoFocus\r\n                  />\r\n                        \r\n                   \r\n                  <Button   disabled={statusUpload} type=\"submit\" className={classes.uploadfiles} variant=\"contained\" color=\"primary\" fullWidth>\r\n                  {statusUploading ? <><CircularProgress size=\"20\"/><div className={classes.uploadfileText}>Файл загружается...</div></>: \"Добавить\" } \r\n                  </Button>\r\n        \r\n                </FormGroup>\r\n              </FormControl>\r\n            </form>\r\n            \r\n          </div>\r\n      </Modal>\r\n    </div>\r\n    :\r\n    <div>\r\n    <Modal\r\n    aria-labelledby=\"spring-modal-title\"\r\n    aria-describedby=\"spring-modal-description\"\r\n    className={classes.modal}\r\n    open={open}\r\n    onClose={handleClose}\r\n    onRendered={onRenderedVideos}\r\n    closeAfterTransition\r\n    BackdropComponent={Backdrop}\r\n    BackdropProps={{\r\n      timeout: 500,\r\n    }}\r\n  >\r\n      <div className={classes.paper}>\r\n      <form  className={styles.addplaylist_form} onSubmit={handleSubmit(onSubmitVideos)}>\r\n          <FormControl  component=\"fieldset\" fullWidth>\r\n            <FormGroup aria-label=\"position\" row>\r\n              <Controller\r\n         \r\n                as={TextField}\r\n                control={control}\r\n                name=\"title\"\r\n                id=\"title\"\r\n                label=\"Название видео\"\r\n                type=\"text\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"filled\"\r\n                defaultValue=\"\"\r\n                 helperText={errors.title?.message}\r\n                 error={!!errors.title}\r\n                fullWidth\r\n                autoFocus\r\n              />\r\n              <Controller\r\n                as={<TextField multiline/>}\r\n                control={control}\r\n                name=\"discription\"\r\n                id=\"discription\"\r\n                label=\"Описание видео\"\r\n                type=\"text\"\r\n              \r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"filled\"\r\n                defaultValue=\"\"\r\n                 helperText={errors.title?.message}\r\n                 error={!!errors.title}\r\n                fullWidth\r\n                autoFocus\r\n              />\r\n              { isVideourl ?         <Controller\r\n         \r\n         as={TextField}\r\n         control={control}\r\n         name=\"urlVideo\"\r\n         id=\"urlVideo\"\r\n         label=\"ID видео с youtube.com\"\r\n         type=\"text\"\r\n         InputLabelProps={{\r\n           shrink: true,\r\n         }}\r\n         variant=\"filled\"\r\n         defaultValue=\"\"\r\n          helperText={errors.title?.message}\r\n          error={!!errors.title}\r\n         fullWidth\r\n         autoFocus\r\n       />:   <Controller\r\n       //@ts-ignore\r\n       as={<TextField   onInput={uploadImage}/>}\r\n       control={control}\r\n       name=\"url\"\r\n       id=\"url\"\r\n       label=\"Загружаемое видео\"\r\n       className={classes.uploadfiles}\r\n       type=\"file\"\r\n       InputLabelProps={{\r\n         shrink: true,\r\n       }}\r\n       InputProps={\r\n         {\r\n           accept: \"videos/*\"\r\n         }\r\n       }\r\n       variant=\"filled\"\r\n       defaultValue=\"\"\r\n        helperText={errors.coverURL?.message}\r\n        error={!!errors.coverURL}\r\n       fullWidth\r\n       autoFocus\r\n     />}\r\n             \r\n                    \r\n                <FormControlLabel\r\n                  className={classes.checkbox}\r\n                  id=\"videofromurl\"\r\n\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"checkedB\"\r\n                      color=\"primary\"\r\n                      checked={isVideourl}\r\n                      onChange={ () => setisVideourl(!isVideourl)}\r\n                    />\r\n                  }\r\n                  label=\"Добавить видео с youtube.com\"\r\n                />\r\n              <Button disabled={ isVideourl ? false : statusUpload} type=\"submit\" className={classes.uploadfiles} variant=\"contained\" color=\"primary\" fullWidth>\r\n                 {statusUploading ? <><CircularProgress size=\"20\"/><div className={classes.uploadfileText}>Файл загружается...</div></>: \"Добавить\" } \r\n              \r\n               \r\n              </Button>\r\n    \r\n            </FormGroup>\r\n          </FormControl>\r\n        </form>\r\n        \r\n      </div>\r\n  </Modal>\r\n</div>\r\n  }\r\n  \r\n    </>\r\n  );\r\n}","P:\\Diploma\\frontend\\src\\api\\authApi.ts",[],["357","358"],"P:\\Diploma\\frontend\\src\\store\\ducks\\user\\reducer.ts",[],["359","360"],"P:\\Diploma\\frontend\\src\\store\\ducks\\user\\contracts\\actionTypes.ts",[],["361","362"],"P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\selectors.ts",["363"],"P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\contracts\\actionTypes.ts",[],["364","365"],"P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\actionCreators.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\reducer.ts",["366","367","368"],"import produce, { Draft } from \"immer\";\nimport Playlist from \"../../../components/Playlist/Playlist\";\nimport { LoadingStatus } from \"../../types\";\nimport { UserActionsType } from \"../user/contracts/actionTypes\";\nimport { PlaylistActions, setPlaylistsLoadingState } from \"./actionCreators\";\nimport { PlaylistsActionType } from \"./contracts/actionTypes\";\nimport { FormState,  PlaylistState } from \"./contracts/state\";\n\n\nconst initialPlaylistsState: PlaylistState = {\n    items: [],\n    search: [],\n    LoadingStatus: LoadingStatus.NEVER,\n    addFormState: FormState.NEVER,\n    deleteFormState: FormState.NEVER,\n    updateFormState: FormState.NEVER,\n};\n\nexport const playlistsReducer = produce((draft: Draft<PlaylistState>, action: PlaylistActions) => {\n    switch(action.type) {\n        case PlaylistsActionType.SEARCH_PLAYLIST:\n                draft.search = draft.items\n                draft.search = draft.search?.filter( el => el.title.includes(action.payload));\n        break;\n        case PlaylistsActionType.SET_MY_PLAYLISTS:\n            draft.items = action.payload;\n            draft.LoadingStatus = LoadingStatus.SUCCESS;\n        break;\n        case PlaylistsActionType.DELETE_PLAYLIST:\n           draft.items?.filter(el => el._id !== action.payload);\n           draft.deleteFormState = FormState.SUCCESS;\n        break;\n        case PlaylistsActionType.ADD_PLAYLIST:\n            draft.items?.push(action.payload);\n            draft.addFormState = FormState.SUCCESS;\n        break;\n        case PlaylistsActionType.UPDATE_PLAYLIST:\n            // draft.items?.forEach( el => {\n            //     if (el._id === action.payload.id) {\n            //         el.title = action.payload.title;\n            //         el.coverURL = action.payload.coverURL;\n            //     }\n            // })\n        break;\n        case PlaylistsActionType.SET_ADD_FORM_STATE: \n            draft.addFormState = action.payload;\n        \n        break;\n        case PlaylistsActionType.FETCH_UPDATE_PLAYLIST:\n            draft.updateFormState = action.payload;\n        break;\n     \n        case PlaylistsActionType.SET_LOADING_STATE:\n            draft.LoadingStatus = action.payload;\n        break;\n        case PlaylistsActionType.FETCH_ADD_PLAYLIST:\n            draft.addFormState = FormState.LOADING;\n        break;\n        case PlaylistsActionType.FETCH_DELETE_PLAYLIST:\n            draft.deleteFormState = FormState.LOADING;\n        break;\n   \n        \n        default:\n            break;\n\n    }\n}, initialPlaylistsState)",["369","370"],"P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\contracts\\state.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\playlists\\sagas.ts",[],"P:\\Diploma\\frontend\\src\\index.tsx",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\user\\actionCreators.ts",[],"P:\\Diploma\\frontend\\src\\components\\Notification\\index.tsx",[],"P:\\Diploma\\frontend\\src\\components\\Playlist\\Playlist.tsx",["371","372","373","374"],"import React, { useEffect, useState } from 'react'\n\n\nimport { Button, createStyles, makeStyles, TextField, Theme} from '@material-ui/core'\n\nimport styles from './Playlist.module.scss'\nimport SimplePopover from '../Popover'\nimport { fetchDletePlaylist, fetchUpdatePlaylist} from '../../store/ducks/playlists/actionCreators'\nimport { useDispatch } from 'react-redux'\nimport { FormState } from '../../store/ducks/playlists/contracts/state'\nimport { playlistsApi } from '../../api/playlistsApi'\nimport { Link } from 'react-router-dom'\n\n\ninterface PlaylistProps  {\n    id: string;\n    title: string;\n    coverURL: string;\n    isMy: boolean;\n    owner: any;\n    updateStatus: () => void;\n    handleUpdateStatus:(s: boolean) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    inputFile: {\n       InputLabelProps: {\n           color: '#ffffff'\n       }\n    }\n  }),\n);\n\nconst Playlist:React.FC<PlaylistProps> = ({\n    id,\n    title,\n    coverURL,\n    isMy,\n  \n    handleUpdateStatus \n}: PlaylistProps): React.ReactElement => {\n    const dispatch = useDispatch();\n    const [editMode, seteditMode] = useState(false);\n\n\n    const [updateTitle, setUpdateTitle] = useState('');\n    const [selectCoverUrl, setselectCoverUrl] = useState('');\n   \n  \n   \n\n    const uploadImage = async (e: any) => {\n   \n        try {\n            const files = e.target.files;\n        const data = new FormData();\n        data.append('file', files[0]);\n        data.append('upload_preset', 'ArtemkaReact');\n        const res = await fetch('https://api.cloudinary.com/v1_1/banancly123/image/upload', {\n            method: 'POST',\n            body: data,\n          });\n          const file = await res.json();\n          setselectCoverUrl(String(file.secure_url));\n          console.log(String(file.secure_url));\n       \n        } catch (error) {\n            console.log(error);\n        }\n      }\n\n\n    const handleDelete = (id: string) => {\n       dispatch(fetchDletePlaylist(id));\n    }\n    const handleEditMode = () => {\n        seteditMode(true);\n    }\n    const stopEditMode = () => {\n        seteditMode(false);\n        \n    }\n\n\n\n    const handleUpdateTitle = (e: any) => {\n        setUpdateTitle(e.target.value);\n    }\n\n    const handleUpdate = () => {\n        const obj = {\n            id:id,\n            title: updateTitle,\n            coverURL: selectCoverUrl\n        }\n        console.log(obj);\n        playlistsApi.UpdatePlaylist(obj);\n        handleUpdateStatus(true);\n        stopEditMode();\n\n\n        //Костыль который нужно пофиксить\n        // dispatch(fetchUpdatePlaylist(obj));\n        \n    }\n\n    const classes = useStyles();\n    return (\n        <div className={styles.playlist_item}>\n        <div className={styles.playlist_item_title}>\n            {editMode ? <TextField defaultValue={title} onChange={handleUpdateTitle}  className={styles.Edit_text}/> : title}\n        </div>\n        <div className={styles.playlist_item_cover_img}>\n        {editMode ? \n        <>\n        <div className={styles.input_div}>\n            <img src={selectCoverUrl ? selectCoverUrl : coverURL} alt=\"\"/>\n        </div>\n        <input className={styles.input}  onChange={uploadImage} type=\"file\"  />\n        </>\n        : <img src={coverURL} alt=\"\"/>}\n        </div>\n        {editMode ? <Button onClick={() => handleUpdate()}  className={styles.playlist_item_btn} variant=\"contained\" color=\"primary\" fullWidth >Изменить</Button>\n         : \n         <Link to={\"/home/myplaylists/\" + id}>\n             <Button className={styles.playlist_item_btn} variant=\"contained\" color=\"primary\" fullWidth>Перейти</Button>\n         </Link>\n         }\n        \n\n          {isMy  ?  <SimplePopover editMode={editMode}  stopEdit={ () => stopEditMode()} onEdit={ () => handleEditMode()} onDelete={() => handleDelete(id)}/>: \"\"}               \n        </div>\n    )\n}\n\nexport default Playlist\n",["375","376"],"P:\\Diploma\\frontend\\src\\components\\Popover\\index.tsx",["377","378"],"P:\\Diploma\\frontend\\src\\store\\ducks\\user\\sagas.ts",["379","380"],"import { fetchSetAllUsersDataActionInterface, FetchSignInActionInterface, FetchSignUpActionInterface, UserActionsType } from \"./contracts/actionTypes\";\nimport { call, put , takeLatest } from 'redux-saga/effects';\nimport { AuthApi } from \"../../../api/authApi\";\nimport { ClearStore, setAllUsers, setUserData, setUserLoadingState } from \"./actionCreators\";\nimport { LoadingStatus } from \"../../types\";\nimport { selectUserStatus } from \"./selectors\";\n\nexport function* fetchSignInRequest( {payload}: FetchSignInActionInterface) {\n    try {\n\n        const { data } = yield call( AuthApi.signIn, payload);\n        console.log(data);\n        window.localStorage.setItem('token', data.token);\n        yield put(setUserData(data));\n    }\n    catch (error) {\n        yield put(setUserLoadingState(LoadingStatus.ERROR));\n    }\n}\n\nexport function* fetchSignUpRequest({payload}: FetchSignUpActionInterface) {\n    try {\n        yield put(setUserLoadingState(LoadingStatus.LOADING));\n        yield call(AuthApi.signUp, payload);\n        yield put(setUserLoadingState(LoadingStatus.SUCCESS));\n    }\n    catch (error) {\n        yield put(setUserLoadingState(LoadingStatus.ERROR));\n    }\n}\n\n\nexport function* fetchSetAllUsers() {\n    try {\n\n       const { data } =  yield call (AuthApi.getUsers);\n\n       yield put(setAllUsers(data));\n\n    } catch (error) {\n        \n    }\n}\n\nexport function* fetchClearStore() {\n    try {\n        yield put(ClearStore(null));\n    } catch (error) {\n        \n    }\n}\n\nexport function* fetchUpdateUserRequest(payload: any) {\n    try {\n            yield call(AuthApi.UpdateUser, payload.payload)\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n\nexport function* userSaga() {\n    yield takeLatest(UserActionsType.FETCH_SIGN_IN, fetchSignInRequest);\n    yield takeLatest(UserActionsType.FETCH_SIGN_UP, fetchSignUpRequest);\n    yield takeLatest(UserActionsType.FETCH_SET_USERS_DATA, fetchSetAllUsers);\n    yield takeLatest(UserActionsType.FETCH_CLEAR_STORE, fetchClearStore);\n    yield takeLatest(UserActionsType.UPDATE_USER, fetchUpdateUserRequest);\n}",["381","382"],"P:\\Diploma\\frontend\\src\\pages\\Home.jsx",[],["383","384"],"P:\\Diploma\\frontend\\src\\core\\axios.ts",[],["385","386"],"P:\\Diploma\\frontend\\src\\components\\index.js",[],["387","388"],"P:\\Diploma\\frontend\\src\\components\\SignInForm\\index.tsx",["389","390","391","392","393"],"import React from 'react';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport * as yup from \"yup\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport './SignIn.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Color } from '@material-ui/lab';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { Button, TextField, Typography  } from '@material-ui/core';\nimport { fetchSignIn } from '../../store/ducks/user/actionCreators';\nimport { RegisterModal } from '../RegisterModal';\nimport { selectUserStatus } from '../../store/ducks/user/selectors';\nimport { LoadingStatus } from '../../store/types';\nimport { useHistory } from 'react-router-dom';\nimport { createStyles, makeStyles,Theme } from '@material-ui/core';\n\n\nexport interface LoginFormProps {\n  email:string;\n  password: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n    textField: {\n      background: '#2D2D3A',\n      width: '430px',\n      marginBottom: '10px',\n      '& .MuiInputBase-input': {\n          background: '#ffffff',\n          color: '#000000',\n          marginBottom: '0px',\n      \n          paddingLeft: '12px'\n      },\n      '& .MuiInput-underline:after': {\n          bottom: '-10px',\n          borderBottom: '1px solid #ffffff'\n      },\n   \n      '& .MuiInput-underline:before': {\n          border: 'none'\n      }\n  },\n    \n  }),\n);\n\n\n\nconst SignInFormSchema = yup.object().shape({\n  email: yup.string().email('Неверная почта').required('Введите почту'),\n  password: yup.string().min(6,'Минимальная длинна пароля 6 символов').required(),\n});\n\nconst SignInForm: React.FC<any> = ({}): React.ReactElement => {\n   const [visibleModal, setVisibleModal] = React.useState<boolean>(false);\n   const loadingStatus = useSelector(selectUserStatus);\n   const openNotificationRef = React.useRef<(text: string, type: Color) => void>(() => { });\n    const classes = useStyles();\n   const handleCloseModal = (): void => {\n     setVisibleModal(false);\n   }\n  const dispatch = useDispatch();\n  // const dispatch = useDispatch();\n  const history = useHistory();\n   \n  const { control, handleSubmit, errors } = useForm<LoginFormProps>({\n    resolver: yupResolver(SignInFormSchema)\n  });\n   const isError = loadingStatus === LoadingStatus.ERROR;\n  //Проверка на авторизацию для показа нотификации \n\n  const onSubmit = async (data: LoginFormProps) => {\n    dispatch(fetchSignIn(data));\n\n    \n  };\n  return (\n    <>\n    <form className=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\n              <FormControl  component=\"fieldset\" fullWidth>\n                <FormGroup aria-label=\"position\" row>\n                  <Controller\n                    as={TextField}\n                    className={classes.textField}\n                    control={control}\n                    name=\"email\"\n                    id=\"email\"\n                    label=\"E-Mail\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                    type=\"email\"\n                    defaultValue=\"\"\n                    helperText={errors.email?.message}\n                    error={!!errors.email}\n                    fullWidth\n                    autoFocus\n                  />\n                  <Controller\n                    as={TextField}\n                    className={classes.textField}\n                    control={control}\n                    name=\"password\"\n                    id=\"password\"\n                    label=\"Пароль\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                    type=\"password\"\n                    defaultValue=\"\"\n                    helperText={errors.password?.message}\n                    error={!!errors.password}\n                    fullWidth\n                  />\n                  <Typography className={classNames(\"Error\",{\"Error_active\": isError})}>Неверный логин или пароль</Typography>\n                  <div className=\"Buttons\">\n                  <Button className=\"Button_login \" type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                    Войти\n                  </Button>\n                  <Button  onClick={ () => setVisibleModal(true) }  className=\"Button_login\" variant=\"contained\" color=\"primary\" fullWidth>\n                    Регистрация\n                  </Button>\n                  </div>\n\n                </FormGroup>\n              </FormControl>\n            </form>\n    <RegisterModal open={visibleModal === true} onClose={handleCloseModal} />\n    </>\n  );\n};\n\nexport default SignInForm;","P:\\Diploma\\frontend\\src\\pages\\MyVideos.jsx",["394","395"],"P:\\Diploma\\frontend\\src\\components\\Header\\index.js",[],["396","397"],"P:\\Diploma\\frontend\\src\\api\\videosApi.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\reducer.ts",[],["398","399"],"P:\\Diploma\\frontend\\src\\store\\store.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\saga.ts",[],["400","401"],"P:\\Diploma\\frontend\\src\\store\\rootReducer.ts",["402"],"import { combineReducers } from \"redux\";\nimport { CommentsReducer } from \"./ducks/comments/reducer\";\nimport { playlistsReducer } from \"./ducks/playlists/reducer\";\nimport { subscribeReducer } from \"./ducks/subscribes/reducer\";\nimport { userReducer } from \"./ducks/user/reducer\";\nimport {VideosReducer} from \"./ducks/videos/reducer\";\n\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    playlists: playlistsReducer,\n    videos: VideosReducer,\n    comments: CommentsReducer,\n    subscribes: subscribeReducer\n})\n//@ts-ignore\nexport default (state, action) => rootReducer(action.type === 'CLEAR_STORE' ? undefined : state, action);",["403","404"],"P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\actionCreators.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\contacts\\actionTypes.ts",["405"],"import { Action } from \"redux\";\r\nimport { LoadingStatus } from \"../../../types\";\r\nimport { Video, VideoState } from \"./state\";\r\n\r\nexport enum VideosActionType {\r\n    SET_VIDEOS = 'videos/SET_VIDEOS',\r\n    SET_LOADING_STATE = 'videos/SET_LOADIN_STATE',\r\n    FETCH_SET_VIDEOS = 'videos/FETCH_SET_VIDEOS',\r\n    DELETE_VIDEOS = 'videos/DELETE_VIDEOS',\r\n    UPDATE_VIDEOS = 'videos/UPDATE_VIDEOS',\r\n    ADD_VIDEOS = 'videos/ADD_VIDEOS'\r\n }\r\n\r\nexport interface SetVideosActionInterface extends Action<VideosActionType> {\r\n    type: VideosActionType.SET_VIDEOS,\r\n    payload: VideoState\r\n}\r\n\r\nexport interface fetchAddVideosActionInterface extends Action<VideosActionType> {\r\n    type: VideosActionType.ADD_VIDEOS,\r\n    payload: any\r\n}\r\n\r\nexport interface fetchDeleteVideosActionInterface extends Action<VideosActionType> {\r\n    type: VideosActionType.DELETE_VIDEOS,\r\n    payload: string\r\n}\r\n\r\nexport interface fetchUpdateVideosActionInterface extends Action<VideosActionType> {\r\n    type: VideosActionType.UPDATE_VIDEOS,\r\n    payload: any\r\n}\r\n\r\n\r\n\r\nexport interface setLoadinStateActionInterface extends Action<VideosActionType> {\r\n    type: VideosActionType.SET_LOADING_STATE,\r\n    payload: LoadingStatus\r\n}\r\n\r\nexport interface fetchSetVideosActionInterface extends Action<VideosActionType> {\r\n    type: VideosActionType.FETCH_SET_VIDEOS,\r\n    payload: any\r\n}","P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\ActionCreators.ts",[],"P:\\Diploma\\frontend\\src\\components\\VideoListItem\\index.tsx",["406","407","408","409","410"],"import React, { KeyboardEvent, useState } from 'react'\r\n\r\nimport styles from './VideoListItem.module.scss';\r\nimport like from './../../assets/img/like.png';\r\nimport comments from './../../assets/img/comments.png';\r\nimport Views from './../../assets/img/views.png';\r\n// import { formatDate } from '../../utils/formatDate';\r\nimport { format } from 'date-fns';\r\nimport SimplePopover from '../Popover';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchDeleteVideos, fetchUpdateVideos } from '../../store/ducks/videos/ActionCreators';\r\nimport { TextField } from '@material-ui/core';\r\nimport { AnyAaaaRecord } from 'dns';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface VideoListItemInterface  {\r\n    _id: string,\r\n    title: string,\r\n    url: string,\r\n    likes: string,\r\n    views: string,\r\n    createdAt: string,\r\n    commentsCount: string,\r\n    isMy: boolean\r\n}\r\n\r\nconst VideoListItem = ({_id,title, commentsCount, isMy, url, likes = \"0\", views = \"0\", createdAt}: VideoListItemInterface) => {\r\n    \r\n\r\n    const [editMode, seteditMode] = useState(false);\r\n    const [updateTitle, setUpdateTitle] = useState('');\r\n\r\n\r\n    const handleUpdateTitle = (e: any) => {\r\n        setUpdateTitle(e.target.value);\r\n\r\n    \r\n    }\r\n\r\n    const handleKeyPressed = (e: any) => {\r\n        if (e.key === 'Enter') {\r\n            if (e.target.value.length >= 3 && e.target.value.length <=45) {\r\n                const obj = {\r\n                    id: _id,\r\n                    title: updateTitle\r\n                }\r\n                dispatch(fetchUpdateVideos(obj));\r\n                seteditMode(false);\r\n\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const stopEditMode = () => {\r\n        seteditMode(false);\r\n    }\r\n    const handleEditMode = () => {\r\n        seteditMode(true);\r\n    }\r\n    const handleDelete = () => {\r\n     \r\n       dispatch(fetchDeleteVideos(_id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.MyVideos_item}>\r\n        <div className={styles.MyVideos_item_char}>\r\n                {editMode ? <TextField  defaultValue={title} onKeyPress={handleKeyPressed} onChange={handleUpdateTitle}  className={styles.Edit_text}/> : <Link className={styles.linkVideo} to={\"/home/videos/\" + _id}> {title}</Link>}\r\n        </div>\r\n        {/* <div className={styles.MyVideos_item_char}>\r\n            <img className={styles.MyVideos_item_likeimg} src={like}/>\r\n            <span className={styles.MyVideos_item_likespan}>\r\n                {`Нравится: ${likes}`}\r\n            </span>\r\n        </div> */}\r\n        <div className={styles.MyVideos_item_char}>\r\n             <img className={styles.MyVideos_item_likeimg} src={comments}/>\r\n            <span className={styles.MyVideos_item_likespan}>\r\n            {`Комментарии: ${commentsCount}`}\r\n            </span>\r\n            \r\n        </div>\r\n        <div className={styles.MyVideos_item_char}>\r\n            <img className={styles.MyVideos_item_likeimg} src={Views}/>\r\n            <span className={styles.MyVideos_item_likespan}>\r\n            {`Просмотры: ${views}`}\r\n            </span>\r\n           \r\n        </div>\r\n        <div className={styles.MyVideos_item_char}>\r\n            { createdAt ? format(new Date(createdAt), 'dd.MM.yyyy') : format(new Date(), 'dd.MM.yyyy')}\r\n        </div>\r\n        \r\n        {isMy ? <SimplePopover editMode={editMode}  stopEdit={ () => stopEditMode()} onEdit={ () => handleEditMode()} onDelete={() => handleDelete()}/> : \"\"} \r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default VideoListItem;\r\n","P:\\Diploma\\frontend\\src\\App.tsx",["411","412"],"P:\\Diploma\\frontend\\src\\pages\\VideoPage.jsx",["413"],"import React from 'react'\r\nimport { SelectVideos } from '../store/ducks/videos/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport VideoPlayer from 'react-video-js-player';\r\nimport styles from './VideoPage.module.scss';\r\nimport { videosApi } from '../api/videosApi';\r\nimport { Button, CircularProgress, TextField } from '@material-ui/core';\r\n\r\nimport { FetchAddComments, fetchSetComments } from '../store/ducks/comments/ActionCreators';\r\nimport { SelectComments, SelectCommentsStatus } from '../store/ducks/comments/selectors';\r\nimport Comment from '../components/Comment';\r\nimport { LoadingStatus } from '../store/types';\r\n\r\n\r\nimport YouTube from '@u-wave/react-youtube';\r\n\r\n\r\n\r\n\r\nconst VideoPage =  ()  => {\r\n    const searchString =  window.location.href;\r\n    const videoID = searchString.split('/')[5];\r\n    const comments = useSelector(SelectComments);\r\n    const LoadStatus= useSelector(SelectCommentsStatus);\r\n    const [commentFieldText, setcommentFieldText] = React.useState('')\r\n \r\n    const dispatch = useDispatch();\r\n\r\n\r\n    \r\n    const handleInputText = (e) => {\r\n        setcommentFieldText(e.target.value);\r\n        \r\n    }\r\n\r\n    const handleVisitVideo = () => {\r\n        videosApi.PlusViews(videoID);\r\n    }\r\n\r\n    const handleAddComment = () => {\r\n        const obj = {\r\n            video: videoID,\r\n            text: commentFieldText\r\n        }\r\n        dispatch(FetchAddComments(obj));\r\n        setcommentFieldText('');\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchSetComments(videoID));\r\n    \r\n        handleVisitVideo();\r\n    }, []);\r\n\r\n\r\n    let item = useSelector(SelectVideos).find(item => item._id === videoID);;\r\n\r\n\r\n        if ( !item) {\r\n           \r\n           item =  videosApi.showVideo(videoID);\r\n           \r\n        }\r\n\r\n        console.log(item);\r\n        \r\n    return (\r\n        <div>\r\n        <div className={styles.container}>\r\n            <div className={styles.video_container}>\r\n\r\n            \r\n            <div className={styles.video}>\r\n              <div className={styles.video_player}>\r\n                  {item.url && item.url.length > 14 ? <VideoPlayer \r\n               className={styles.video_js} src={item.url} width=\"720\" height=\"400\"/> : <YouTube\r\n  video={item.url}\r\n  width=\"720\" height=\"400\"\r\n/>} \r\n               \r\n              </div>\r\n              <div className={styles.video_data}>\r\n                <div className={styles.video_data_title}>\r\n                    <div className=\"\">\r\n                        {item.title}\r\n                    </div>\r\n                    <div className=\"\">\r\n                      Просмотры: {item.views}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.video_data_likes}>\r\n                          <div>\r\n                     \r\n                        </div>\r\n                        {/* <div className={styles.video_data_likes_text}>\r\n                        Отметки нравится:  {item.likes}\r\n                        </div> */}\r\n                        {/* <IconButton>\r\n                            <FavoriteIcon style={ { color: '#3F51B5' , padding: 0, marginTop: '-5px', fontSize: '20px', marginRight: '5px'}} className=\"IconLike\"/>\r\n                        </IconButton> */}\r\n                  \r\n                 \r\n            \r\n                  \r\n                </div>\r\n\r\n                <div className=\"\">\r\n                    <div className={styles.disctiption_title} >Описание видео:</div>\r\n                    <div>{ item.discription ? item.discription : 'Описание отсутствует.'}</div>\r\n               \r\n                </div>         \r\n            </div>\r\n            </div>\r\n            <div className={styles.comments_column}>\r\n            <div className={styles.video_comments}>\r\n                <div className={styles.video_comments_title}>\r\n                    <div>\r\n                    Комментарии: \r\n                    </div>\r\n                    <div className={styles.comment}>\r\n                    <TextField onChange={handleInputText} style={ {width: '450px' , verticalAlign: 'unset', marginTop: '10px'}} value={commentFieldText} placeholder=\"Введите ваш комментарий\"  />\r\n                    <Button onClick={handleAddComment}  size='small' style={ {height: '33px', marginTop: '9px', marginLeft: '5px'}} variant=\"contained\"  color='primary'>Отправить</Button>\r\n                    </div>\r\n                    <div className={styles.comment_Items}>\r\n                        \r\n\r\n                        {LoadStatus === LoadingStatus.SUCCESS ? comments.map( el => <Comment key={el._id}  _id={el._id} text={el.text} createdAt={el.createdAt} login={el.owner.username} avatar={el.owner.avatar} userID={el.owner._id}/>).reverse()\r\n                        : <CircularProgress />\r\n                    }\r\n                    </div>\r\n                    \r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n   \r\n            \r\n        </div>\r\n    </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default VideoPage\r\n",["414","415"],"P:\\Diploma\\frontend\\src\\api\\commentApi.ts",[],["416","417"],"P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\contracts\\actionTypes.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\saga.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\reducer.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\ActionCreators.ts",["418"],"import { LoadingStatus } from \"../../types\";\r\nimport { fetchDeleteVideosActionInterface } from \"../videos/contacts/actionTypes\";\r\nimport { AddCommentsActionInterface, CommentsActionType, DeleteCommentsActionInterface, FetchAddCommentsActionInterface, fetchSetCommentsActionInterface, SetCommentsActionInterface, setLoadinStateActionInterface } from \"./contracts/actionTypes\";\r\nimport { Comments, CommentsState } from \"./contracts/state\";\r\n\r\n\r\nexport const setComments= (payload: CommentsState): SetCommentsActionInterface  => ({\r\n    type: CommentsActionType.SET_COMMENTS,\r\n    payload\r\n})\r\n\r\nexport const setLoadingState = (payload: LoadingStatus): setLoadinStateActionInterface  => ({\r\n    type: CommentsActionType.SET_LOADING_STATE,\r\n    payload\r\n})\r\n\r\nexport const AddComments = (payload: Comments): AddCommentsActionInterface => ({\r\n    type: CommentsActionType.ADD_COMMENTS,\r\n    payload\r\n})\r\n\r\nexport const FetchAddComments = (payload: Comments): FetchAddCommentsActionInterface => ({\r\n    type: CommentsActionType.FETCH_ADD_COMMENT,\r\n    payload\r\n})\r\n\r\nexport const fetchSetComments = (payload: any): fetchSetCommentsActionInterface => ({\r\n    type: CommentsActionType.FETCH_SET_COMMENTS,\r\n    payload\r\n})\r\n\r\nexport const fetchDeleteComments = (payload: any): DeleteCommentsActionInterface => ({\r\n    type: CommentsActionType.DELETE_COMMENTS,\r\n    payload\r\n})\r\n\r\nexport type CommentsActions =\r\n| SetCommentsActionInterface\r\n| setLoadinStateActionInterface\r\n| fetchSetCommentsActionInterface\r\n| AddCommentsActionInterface\r\n| DeleteCommentsActionInterface","P:\\Diploma\\frontend\\src\\components\\RegisterModal\\index.tsx",["419","420","421"],"P:\\Diploma\\frontend\\src\\components\\Comment\\index.tsx",[],"P:\\Diploma\\frontend\\src\\utils\\formatDate.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\comments\\selectors.ts",[],"P:\\Diploma\\frontend\\src\\components\\MainMenu\\index.tsx",["422"],"import React from 'react';\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport PanoramaIcon from '@material-ui/icons/Panorama';\nimport styles from './MainMenu.module.scss';\nimport { Link } from 'react-router-dom';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nvar classNames = require('classnames');\n\nconst MainMenu = () => {\n  const [activeCategory, setactiveCategory] = React.useState(null);\n\n  return (\n    <ul className={styles.Menu}>\n      <li className={ classNames(styles.Menu_item, {\n        [styles.active]: activeCategory === 0\n      })} onClick={ () => setactiveCategory(0)}>\n        <Link to=\"/home/myplaylists\">\n          <PanoramaIcon  fontSize=\"small\" className={styles.IconMenu}/>\n          <div className={styles.Users}>Мои курсы</div>\n        </Link>\n      </li>\n      <li className={ classNames(styles.Menu_item, {\n        [styles.active]: activeCategory === 1\n      })} onClick={ () => setactiveCategory(1)}>\n        <Link to=\"/home/users\">\n            <GroupAddIcon  className={styles.IconMenu}/>\n          <div className={styles.Users}>Пользователи</div>\n        </Link>\n      </li>\n      <li className={ classNames(styles.Menu_item, {\n        [styles.active]: activeCategory === 2\n      })} onClick={ () => setactiveCategory(2)}>\n      <Link to=\"/home/mysubscribes\">\n            <SubscriptionsIcon   className={styles.IconMenuSub}/>\n          <div className={styles.Users}>Мои подписки</div>\n        </Link>\n      </li>\n      <li className={ classNames(styles.Menu_item, {\n        [styles.active]: activeCategory === 3\n      })} onClick={ () => setactiveCategory(3)}>\n      <Link to=\"/home/feed\">\n            <FiberNewIcon className={styles.IconMenuNew}/>\n          <div className={styles.Users}>Лента</div>\n        </Link>\n      </li>\n      <li className={ classNames(styles.Menu_item, {\n        [styles.active]: activeCategory === 4\n      })} onClick={ () => setactiveCategory(4)}>\n      <Link to=\"/home/stat\">\n            <EqualizerIcon className={styles.IconMenuStat}/>\n          <div className={styles.Users}>Статистика</div>\n        </Link>\n      </li>\n    </ul>\n  );\n};\n\nexport default MainMenu;\n","P:\\Diploma\\frontend\\src\\store\\ducks\\videos\\selectors.ts",[],["423","424"],"P:\\Diploma\\frontend\\src\\pages\\UsersPage.jsx",["425","426","427"],"import { TextField } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UsersItem from '../components/UsersItem';\r\nimport {  FetchAddSubscribe, FetchDeleteSubscribe, FetchSetSubscribes } from '../store/ducks/subscribes/actionCreators';\r\nimport { SelectSubscribes } from '../store/ducks/subscribes/selectors';\r\nimport { fetchSetAllUsers, SearchUsers } from '../store/ducks/user/actionCreators';\r\nimport { selectAllUsersData, selectUserData ,selectUserSearch } from '../store/ducks/user/selectors';\r\nimport { createStyles, makeStyles,Theme } from '@material-ui/core';\r\nimport styles from './UsersPage.module.scss'\r\nimport {  IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    Header : {\r\n        marginTop: '50px',\r\n        position: 'relative'\r\n    },\r\n    Search: {\r\n        color: '#4447e2',\r\n        position: 'absolute',\r\n        bottom: '-15px',\r\n        left: '150px'\r\n    },\r\n    Header_title: {\r\n       fontWeight: '500',\r\n       fontSize: '26px',\r\n       fontFamily: 'Roboto Condensed',\r\n       lineHeight: '20px'\r\n    },\r\n    btn: {\r\n      marginLeft: '50px'\r\n    },\r\n    textField: {\r\n      position: 'absolute',\r\n      left: '200px',\r\n      top: '-5px',\r\n      // marginLeft: '80px',\r\n      // marginTop: '-5px',\r\n      background: '#2D2D3A',\r\n      width: '430px',\r\n      borderRadius: '15px',\r\n      '& .MuiInputBase-input': {\r\n          background: '#2D2D3A',\r\n          color: '#ffffff',\r\n          marginBottom: '0px',\r\n          borderRadius: '15px',\r\n          paddingLeft: '12px'\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n          bottom: '-10px',\r\n          borderBottom: '1px solid #ffffff'\r\n      },\r\n      '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n          borderBottom: 'none'\r\n      },\r\n      '& .MuiInput-underline:before': {\r\n          border: 'none'\r\n      }\r\n  },\r\n  }),\r\n);\r\n\r\n\r\n\r\n\r\nconst UsersPage = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [searchMode, setseatchMode] = React.useState(false);\r\n    React.useEffect( () => {\r\n        dispatch(fetchSetAllUsers());\r\n        dispatch(FetchSetSubscribes());\r\n    }, [])\r\n\r\n    const userData  = useSelector(selectUserData);\r\n    let myID;\r\n    if (userData){\r\n        myID = userData._id\r\n    }\r\n    const items = useSelector(selectAllUsersData);\r\n    let searchItems = useSelector(selectUserSearch);\r\n    const subscribes = useSelector(SelectSubscribes);\r\n    console.log(subscribes);\r\n    \r\n    const checkSubscribe = (_id) => {\r\n        const check = subscribes.find(el => el.author === _id) ? true : false;\r\n        return check\r\n    }\r\n    let verifyUsers;\r\n    let  verifySearchItems;\r\n\r\n  \r\n\r\n    if (items) {\r\n         verifyUsers = items.filter( item => item.confirmed && item._id !== myID);\r\n    }\r\n\r\n   if (searchItems) {\r\n       verifySearchItems = searchItems.filter( item => item.confirmed && item._id !== myID);\r\n   }\r\n\r\n    const handleSearch= (e) => {\r\n        dispatch(SearchUsers(e.target.value));\r\n        setseatchMode(true);\r\n     }\r\n\r\n     const [hideSearch, sethideSearch] = React.useState(true);\r\n   \r\n\r\n    return (\r\n        <div className={styles.UsersPage}>\r\n            <div className={styles.container}>\r\n                <div className={classes.Header}>\r\n                    <div className={classes.Header_title}>\r\n                        Пользователи\r\n                    </div>\r\n                    <IconButton   className={classes.Search} color=\"primary\" onClick={ () => sethideSearch(!hideSearch)}>\r\n                     <SearchIcon />\r\n                   </IconButton>\r\n                    <TextField hidden={hideSearch} placeholder=\"Поиск...\"   className={classes.textField}  onChange={handleSearch}/>\r\n                </div>\r\n              \r\n                <div className={styles.items}>\r\n\r\n                {verifySearchItems && verifySearchItems.length > 0 ? verifySearchItems.map( el => <UsersItem  key={el._id} checkSubscribe={checkSubscribe} avatar={el.avatar} _id={el._id} fullname={el.fullname} username={el.username} createdAt={el.createdAt}/>)\r\n            : verifyUsers && verifyUsers.length > 0 && searchMode === false ? verifyUsers.map( el => <UsersItem  key={el._id} checkSubscribe={checkSubscribe} avatar={el.avatar} _id={el._id} fullname={el.fullname} username={el.username} createdAt={el.createdAt}/>)\r\n            : <div>{searchMode ? \"Не найдено пользователей по ключевому слову.\": \" \"}</div>} \r\n\r\n                   {/* {  verifyUsers && searchItems.length > 0 ? verifyUsers.map( el => <UsersItem  key={el._id} checkSubscribe={checkSubscribe} avatar={el.avatar} _id={el._id} fullname={el.fullname} username={el.username} createdAt={el.createdAt}/>)\r\n                   : } */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersPage\r\n",["428","429"],"P:\\Diploma\\frontend\\src\\components\\UsersItem\\index.tsx",["430","431"],"P:\\Diploma\\frontend\\src\\store\\saga.ts",[],"P:\\Diploma\\frontend\\src\\api\\subscribeApi.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\contracts\\actionTypes.ts",["432"],"import { Action } from \"redux\";\r\nimport { SubscribeActions } from \"../actionCreators\";\r\n\r\nexport enum SubscribeActionType {\r\n    ADD_SUBSCRIBE = 'subscribe/ADD_SUBSCRIBE',\r\n    FETCH_ADD_SUBSCRIBE = 'subscribe/FETCH_ADD_SUBSCRIBE',\r\n    SET_SUBSCRIBES = 'subscribe/SET_SUBSCRIBES',\r\n    FETCH_SET_SUBSCRIBES = 'subscribe/FETCH_SET_SUBSCRIBES',\r\n    DELETE_SUBSCRIBE = 'subscribe/DELELE_SUBSCRIBE',\r\n    FETCH_DELETE_SUBSCRIBES = 'subscribe/FETCH_DELETE_SUBSCRIBES'\r\n}\r\n\r\nexport interface AddSubscribeActionInterface extends Action<SubscribeActionType> {\r\n    type: SubscribeActionType.ADD_SUBSCRIBE;\r\n    payload: any\r\n}\r\n\r\nexport interface SetSubscribesActionInterface extends Action<SubscribeActionType> {\r\n    type: SubscribeActionType.SET_SUBSCRIBES;\r\n    payload: any\r\n}\r\n\r\nexport interface DeleteSubscribesActionInterface extends Action<SubscribeActionType> {\r\n    type: SubscribeActionType.DELETE_SUBSCRIBE,\r\n    payload: any\r\n}\r\n\r\nexport interface FetchDeleteSubscribesActionInterface extends Action<SubscribeActionType> {\r\n    type: SubscribeActionType.FETCH_DELETE_SUBSCRIBES,\r\n    payload: any\r\n}\r\n\r\nexport interface FetchAddSubscribeActionInterface extends Action<SubscribeActionType> {\r\n    type: SubscribeActionType.FETCH_ADD_SUBSCRIBE;\r\n    payload: any\r\n}\r\n\r\nexport interface FetchSetSubscribesActionInterface extends Action<SubscribeActionType> {\r\n    type: SubscribeActionType.FETCH_SET_SUBSCRIBES;\r\n    payload: any\r\n}\r\n\r\n\r\n\r\n","P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\actionCreators.ts",[],["433","434"],"P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\sagas.ts",[],"P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\reducer.ts",[],"P:\\Diploma\\frontend\\src\\components\\UserHeader\\index.tsx",["435","436","437","438","439"],"import React from 'react';\n\nimport userHeaderAvatar from '../../assets/img/userHeader.png';\nimport dropbtn from '../../assets/img/drop.png';\n\n\nimport './UserHeader.scss';\nimport { IconButton, makeStyles, Theme } from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport PopoverHeader from '../PopoverHeader';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../store/ducks/user/selectors';\n\n\n\nconst UserHeader = () => {\n \n  const Avatar =  useSelector(selectUserData)?.avatar;\n\n  return (\n    <div className=\"userHeader\">\n      <div className=\"userHeader_avatar\">\n        <img src={Avatar ? Avatar : userHeaderAvatar} alt=\"\" />\n      </div>\n      <div className=\"userHeader_drop\">\n        <PopoverHeader editMode={true}/>\n      </div>\n    </div>\n  );\n};\n\nexport default UserHeader;\n","P:\\Diploma\\frontend\\src\\components\\PopoverHeader\\index.tsx",["440","441","442","443","444"],"import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport editmenu from '../../assets/img/more-vertical.svg';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport './Popover.scss';\nimport { IconButton } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { Height } from '@material-ui/icons';\nimport { useDispatch } from 'react-redux';\nimport { ClearStore, fetchClearStore } from '../../store/ducks/user/actionCreators';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      padding: theme.spacing(2),\n    },\n    btn: {\n      padding: '0px',\n      color: '#ffffff',\n      '&:hover': {\n        color: '#1890FF'\n      }\n    },\n    menu: {\n      marginTop: '20px',\n      marginLeft: '90px',\n      \"& .MuiPaper-root\": {\n        backgroundColor: '#2D2D3A',\n\n        borderRadius: \"5px\"\n      }\n     \n   \n    },\n    menu_container: {\n      background: '#1C1C24',\n      border: '2px solid #2D2D3A',\n      borderRadius: '5px'\n    },\n    menu_item_container: {\n      display: 'Flex',\n      padding: '5px'\n     \n    },\n    menu_item: {\n      width: '220px',\n      color: '#ffffff',\n      overflow: 'hidden',\n    \n    },\n    line: {\n      background:'#2D2D3A',\n      height: '1px',\n      width: '100%',\n    },\n    text: {\n      marginLeft: '2px',\n      lineHeight: '25px'\n    },\n    logout: {\n      display: 'flex',\n      color: '#E24444',\n      '&:hover': {\n        color: '#E24444'\n      }\n    }\n  }),\n);\n\n\ninterface SimplePopoverProps  {\n\n  editMode: boolean;\n}\n\nexport default function PopoverHeader({ editMode}: SimplePopoverProps): React.ReactElement {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const dispatch = useDispatch();\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const ClearStorage = () => {\n    window.localStorage.setItem('token', \"\");\n    dispatch(fetchClearStore(null));\n  }  \n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <div>\n        <IconButton  aria-describedby={id} className={classes.btn} onClick={handleClick} >\n          <ArrowDropDownIcon  />\n        </IconButton>\n        <div>\n        <Popover  \n        id={id}\n        open={open}\n        className={classes.menu}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n      >\n        <div className={classes.menu_container}>\n        <div className={classes.menu_item}>\n          <Link to={\"/home/myprofile/\"}>\n            <div className={classes.menu_item_container}>\n              <PersonIcon /> \n              <div className={classes.text}>\n                Мой профиль\n              </div>\n            </div>\n          </Link>\n            <div className={classes.line}>\n            </div>\n            <div className={classes.menu_item_container}>\n              <Link className={classes.logout} to={\"/\"} onClick={() =>  ClearStorage()}>\n              <ExitToAppIcon />\n              <div className={classes.text}>\n                Выйти из уч. записи\n              </div>\n              </Link>\n            \n            </div>\n        \n        </div>\n          <div  className={classes.menu_item}>\n         \n\n\n\n          </div>\n        </div>\n    \n          \n          \n      </Popover>\n        </div>\n     \n     \n    </div>\n  );\n}","P:\\Diploma\\frontend\\src\\pages\\Auth.tsx",["445"],"import React from 'react'\nimport SignInForm from '../components/SignInForm'\nimport Particles from \"react-tsparticles\";\nimport { useSelector } from 'react-redux';\nimport { selectIsAuth } from '../store/ducks/user/selectors';\n\nimport { useHistory } from 'react-router-dom';\n\n\nexport const Auth = () => {\n    const history = useHistory();\n    const isAuth = useSelector(selectIsAuth);\n   React.useEffect( () => {\n      if (isAuth) {\n        history.push('/home/users');\n      }\n      else {\n        history.push('/');\n      }\n   }, [isAuth])\n\n    return (\n        <>\n        <Particles\n        id=\"tsparticles\"\n        options={{\n          background: {\n            color: {\n              value: \"#1C1C24\",\n            },\n          },\n          fpsLimit: 60,\n          interactivity: {\n            detectsOn: \"canvas\",\n            events: {\n              onClick: {\n                enable: true,\n                mode: \"push\",\n              },\n              onHover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n              resize: true,\n            },\n            modes: {\n              bubble: {\n                distance: 800,\n                duration: 1,\n                opacity: 0.8,\n                size: 10,\n              },\n              push: {\n                quantity: 4,\n              },\n              repulse: {\n                distance: 200,\n                duration: 0.4,\n              },\n            },\n          },\n          particles: {\n            color: {\n              value: \"#ffffff\",\n            },\n            links: {\n              color: \"#3f51b5\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1,\n            },\n            collisions: {\n              enable: true,\n            },\n            move: {\n              direction: \"none\",\n              enable: true,\n              outMode: \"bounce\",\n              random: false,\n              speed: 3,\n              straight: false,\n            },\n            number: {\n              density: {\n                enable: true,\n                value_area: 800,\n              },\n              value: 80,\n            },\n            opacity: {\n              value: 0.5,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              random: true,\n              value: 3,\n            },\n          },\n          detectRetina: true,\n        }}\n      />\n    \n       <SignInForm  />\n\n       </>\n    )\n}\n","P:\\Diploma\\frontend\\src\\pages\\MyProfile.tsx",["446"],"import { Button, createStyles, makeStyles, Snackbar, TextField, Theme } from '@material-ui/core'\r\nimport { Alert } from '@material-ui/lab';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport avatar from '../assets/img/avatar.png';\r\nimport { fetchUpdateUser } from '../store/ducks/user/actionCreators';\r\nimport { selectUserData } from '../store/ducks/user/selectors';\r\nimport styles from './MyProfile.module.scss'\r\n\r\nimport views from '../assets/img/views.png';\r\nimport subscriber from '../assets/img/subscriber.png';\r\nimport { AuthApi } from '../api/authApi';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    btn: {\r\n        marginTop: '15px',\r\n        marginBottom: '10px',\r\n        textTransform: 'none'\r\n    },\r\n    input: {\r\n        position: 'absolute',\r\n        bottom:'20px',\r\n        width: '250px !important',\r\n        height: '36px !important',\r\n        opacity: '0',\r\n        zIndex: 1\r\n    },\r\n    textField: {\r\n        background: '#2D2D3A',\r\n        width: '430px',\r\n        borderRadius: '15px',\r\n        '& .MuiInputBase-input': {\r\n            background: '#2D2D3A',\r\n            color: '#ffffff',\r\n            marginBottom: '0px',\r\n            borderRadius: '15px',\r\n            paddingLeft: '12px'\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            bottom: '-10px',\r\n            borderBottom: '1px solid #ffffff'\r\n        },\r\n        '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n            borderBottom: 'none'\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            border: 'none'\r\n        }\r\n    },\r\n    inputs_block_item_title: {\r\n        marginBottom: '10px',\r\n        color: '#5F5F6E',\r\n\r\n        fontSize: '14px',\r\n        lineHeight: '20px',\r\n    },\r\n    btn_submit: {\r\n        marginTop: '30px',\r\n        border: 'none',\r\n        '& .MuiButton-root' : {\r\n            color: 'none'\r\n        },\r\n        '& .MuiButton-label' : {\r\n            color: '#ffffff',\r\n            textTransform: 'none',\r\n            fontSize: '16px',\r\n            fontFamily: 'Roboto Condensed'\r\n        },\r\n        '& .MuiTouchRipple-root ': {\r\n            border: '2px solid #4447E2',\r\n            borderRadius: '15px',\r\n           \r\n        },\r\n    },\r\n    info_param: {\r\n        marginLeft: '150px'\r\n    },\r\n    info_param_items: {\r\n        marginTop: '10px'\r\n    },\r\n    info_param_item: {\r\n        background: '#1C1C24',\r\n        borderRadius: '15px',\r\n        padding: '15px',\r\n        display: 'flex',\r\n        marginBottom: '10px'\r\n    },\r\n    info_param_item_icon: {\r\n        marginRight: '10px',\r\n        '& img': {\r\n            width: '40px',\r\n            height: '40px',\r\n            objectFit: 'cover'\r\n        }\r\n    },\r\n    info_param_item_text: {\r\n       \r\n    },\r\n    info_param_item_number: {\r\n        fontSize: '18px',\r\n        lineHeight: '20px'\r\n    },\r\n    info_param_item_title: {\r\n        marginTop: '5px',\r\n        color: '#5F5F6E',\r\n        fontSize: '16px'\r\n    },\r\n    inputs_block_item: {\r\n        marginTop: '10px'\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function MyProfile() {\r\n\r\n    \r\n    const selectData = useSelector(selectUserData);\r\n    let MyInfo;\r\n    if (selectData){\r\n        MyInfo = selectData\r\n    }\r\n    const dispatch = useDispatch();\r\n    \r\n    const [infoProfile, setinfoProfile] = React.useState({ \r\n        views: undefined,\r\n        subscribers: undefined\r\n    });\r\n\r\n    React.useEffect( () => {\r\n        AuthApi.GetInfoForProfile(null).then( res => setinfoProfile({\r\n            views: res.data.views,\r\n            subscribers: res.data.subscribers\r\n        }));\r\n    }, [])\r\n\r\n  \r\n\r\n\r\n    \r\n    const [show, setshow] = React.useState(false);\r\n    const handleUpdateFullname = (e: any) => {\r\n        setfullname(e.target.value);\r\n    }\r\n\r\n    const handleUpdateDiscription = (e: any) => {\r\n        setdiscription(e.target.value);\r\n        console.log(discription);\r\n    }\r\n\r\n    const [selectCoverUrl, setselectCoverUrl] = React.useState('');\r\n   \r\n    const [fullname, setfullname] = React.useState(MyInfo?.fullname);\r\n    const [discription, setdiscription] = React.useState(MyInfo?.discription);\r\n   \r\n\r\n    const handleUpdateProfile = () => {\r\n        const obj = {\r\n            fullname: fullname,\r\n            discription: discription\r\n\r\n        }\r\n        console.log(obj);\r\n        if (MyInfo?.fullname !== fullname) {\r\n            dispatch(fetchUpdateUser(obj));\r\n            setshow(true);\r\n            setTimeout( () => setshow(false), 2000);\r\n        }\r\n        else if (MyInfo?.discription !== discription) {\r\n            dispatch(fetchUpdateUser(obj));\r\n            setshow(true);\r\n            setTimeout( () => setshow(false), 2000);\r\n        }\r\n    \r\n        \r\n    }\r\n\r\n    const uploadImage = async (e: any) => {\r\n    try {\r\n     \r\n        const files = e.target.files;\r\n        const data = new FormData();\r\n        data.append('file', files[0]);\r\n        data.append('upload_preset', 'ArtemkaReact');\r\n        const res = await fetch('https://api.cloudinary.com/v1_1/banancly123/image/upload', {\r\n            method: 'POST',\r\n            body: data,\r\n          });\r\n          const file = await res.json();\r\n          setselectCoverUrl(String(file.secure_url));\r\n          console.log(String(file.secure_url));\r\n\r\n           const obj = {\r\n               avatar: file.secure_url\r\n           }\r\n\r\n          dispatch(fetchUpdateUser(obj));\r\n          setshow(true);\r\n          setTimeout( () => setshow(false), 2000);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n      }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n      <>\r\n        <div className={styles.container}>\r\n            <div className=\"Profile\">\r\n                <div className={styles.Profile_header} >\r\n                    Мой профиль {MyInfo?.username}\r\n                </div>\r\n                <div className={styles.Profile_info} >\r\n                    <div className={styles.Profile_photoUpdate}>\r\n                        <div className={styles.Profile_photoUpdate_img}>\r\n                            <img src={MyInfo?.avatar ? MyInfo?.avatar : avatar} alt=\"\"/>\r\n                        </div>\r\n                        <input type=\"file\" onChange={uploadImage} className={classes.input} />\r\n                        <Button  className={classes.btn} fullWidth variant=\"contained\" color=\"primary\" >Загрузить новое фото</Button>\r\n                    </div>\r\n                    <div className={styles.inputs_block}>\r\n                         <div>\r\n                             <div className={classes.inputs_block_item_title}>\r\n                                Полное имя\r\n                             </div>\r\n                             <TextField onChange={handleUpdateFullname}  multiline defaultValue={MyInfo?.fullname ? MyInfo?.fullname : ''} className={classes.textField}/>\r\n\r\n                         </div>\r\n                         <div className={classes.inputs_block_item}>\r\n                             <div className={classes.inputs_block_item_title}>\r\n                                Описание канала\r\n                             </div>\r\n                             <TextField onChange={handleUpdateDiscription} multiline defaultValue={MyInfo?.discription ? MyInfo?.discription : ''} className={classes.textField}/>\r\n\r\n                         </div>\r\n\r\n\r\n                         <Button variant=\"outlined\"  onClick={handleUpdateProfile} className={classes.btn_submit}>\r\n                             Применить изменения\r\n                         </Button>\r\n                    </div>\r\n                    <div className={classes.info_param}>\r\n                        <div className={classes.inputs_block_item_title}>\r\n                            Общие данные\r\n                        </div>\r\n                        <div className={classes.info_param_items}>\r\n                            <div className={classes.info_param_item}>\r\n                                <div className={classes.info_param_item_icon}>\r\n                                    <img src={views} alt=\"\"/>\r\n                                </div>\r\n                                <div className={classes.info_param_item_text}>\r\n                                    <div className={classes.info_param_item_number}>\r\n                                        {infoProfile.views ? infoProfile.views : \"0\"}\r\n                                    </div>\r\n                                    <div className={classes.info_param_item_title}>\r\n                                        Количество просмотров на ваших видео\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.info_param_item}>\r\n                                <div className={classes.info_param_item_icon}>\r\n                                    <img src={subscriber} alt=\"\"/>\r\n                                </div>\r\n                                <div className={classes.info_param_item_text}>\r\n                                    <div className={classes.info_param_item_number}>\r\n                                    {infoProfile.subscribers ? infoProfile.subscribers : \"0\"}\r\n                                    </div>\r\n                                    <div className={classes.info_param_item_title}>\r\n                                        Количество подписчиков\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Snackbar open={show} anchorOrigin={{  vertical: 'top',\r\n          horizontal: 'center' }}>\r\n      <Alert severity=\"success\" >Изменение прошло успешно</Alert>\r\n    </Snackbar>\r\n        </>\r\n    )\r\n}\r\n","P:\\Diploma\\frontend\\src\\pages\\ProfileForVisit.jsx",["447","448","449"],"import React from 'react'\r\n\r\nimport { Button, createStyles, makeStyles, Snackbar, TextField, Theme } from '@material-ui/core'\r\nimport styles from './ProfileForVisit.module.scss'\r\nimport { Alert } from '@material-ui/lab';\r\nimport avatar from '../assets/img/avatar.png';\r\nimport views from '../assets/img/views.png';\r\nimport subscriber from '../assets/img/subscriber.png';\r\nimport { AuthApi } from '../api/authApi';\r\nimport Playlist from '../components/Playlist/Playlist';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUserData } from '../store/ducks/user/selectors';\r\nimport { SelectSubscribes } from '../store/ducks/subscribes/selectors';\r\nimport { FetchAddSubscribe, FetchDeleteSubscribe, FetchSetSubscribes } from './../store/ducks/subscribes/actionCreators';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    info_param: {\r\n        marginTop: '10px'\r\n    },\r\n    info_param_items: {\r\n        marginTop: '10px'\r\n    },\r\n    info_param_item: {\r\n        maxWidth: '270px',\r\n        background: '#1C1C24',\r\n        borderRadius: '15px',\r\n        padding: '15px',\r\n        display: 'flex',\r\n        marginBottom: '10px'\r\n    },\r\n    info_param_item_icon: {\r\n        marginRight: '10px',\r\n        '& img': {\r\n            width: '40px',\r\n            height: '40px',\r\n            objectFit: 'cover'\r\n        }\r\n    },\r\n    info_param_item_text: {\r\n       \r\n    },\r\n    info_param_item_number: {\r\n        fontSize: '18px',\r\n        lineHeight: '20px'\r\n    },\r\n    info_param_item_title: {\r\n        marginTop: '5px',\r\n        color: '#5F5F6E',\r\n        fontSize: '16px'\r\n    }\r\n  }),\r\n);\r\n\r\nexport const ProfileForVisit = () => {\r\n    const searchString =  window.location.href;\r\n    const userID = searchString.split('/')[5];\r\n    const dispatch  = useDispatch();\r\n    const userData  = useSelector(selectUserData);\r\n    let myID;\r\n    if (userData){\r\n        myID = userData._id\r\n    }\r\n    const classes = useStyles();\r\n    const [show, setshow] = React.useState(false);\r\n    const [infoProfile, setinfoProfile] = React.useState({ \r\n        views: undefined,\r\n        subscribers: undefined,\r\n        playlists: undefined,\r\n        userInfo: {\r\n            fullname: undefined,\r\n            discription: undefined,\r\n            username: undefined,\r\n            avatar: undefined\r\n        },\r\n    });\r\n\r\n    const [Loadingstate, setLoadingstate] = React.useState('false')\r\n\r\n    React.useEffect( () => {\r\n      AuthApi.GetInfoUser(userID).then( res => setinfoProfile({\r\n        views: res.data.views,\r\n        subscribers: res.data.subscribers,\r\n        playlists: res.data.playlists,\r\n        userInfo: res.data.userInfo\r\n    }));\r\n    setLoadingstate(true);\r\n    }, [])\r\n        const playlistItems = infoProfile.playlists && infoProfile.playlists.map( item => <Playlist  key={item._id + 123132}   isMy={myID === item.owner._id} id={item._id} title={item.title} coverURL={item.coverURL}/>).reverse();\r\n     \r\n        const subscribes = useSelector(SelectSubscribes);\r\n\r\n        const checkSubscribe = (_id) => {\r\n            const check = subscribes.find(el => el.author === _id) ? true : false;\r\n            return check\r\n        }\r\n\r\n        let subscribeItem = {\r\n            author: infoProfile.userInfo._id,\r\n            subscriber: myID\r\n          }\r\n\r\n\r\n        const handleAddSubscribe = () => {\r\n            dispatch(FetchAddSubscribe(subscribeItem))\r\n            dispatch(FetchSetSubscribes(null));\r\n            setshow(true);\r\n            setTimeout( () => setshow(false), 2000);\r\n        }\r\n        \r\n        const handleDeleteSubscribe = () => {\r\n            dispatch(FetchDeleteSubscribe(subscribeItem));\r\n            check = true;\r\n        }\r\n        let check = checkSubscribe(infoProfile.userInfo._id);\r\n\r\n    return (\r\n        <>\r\n        <div className={styles.container}>\r\n         \r\n        <div className=\"Profile\">\r\n            <div className={styles.Profile_header} >\r\n                {`Профиль ${infoProfile.userInfo.username}`}\r\n            </div>\r\n            <div className={styles.ProfileVisit}>\r\n                <div className=\"own_info\">\r\n                <div className={styles.Profile_photo}>\r\n                    <img src={infoProfile.userInfo.avatar ? infoProfile.userInfo.avatar : avatar} alt=\"\"/>\r\n                </div>\r\n                <div className={styles.Profile_subscribe_btn}>\r\n                 { !check ? <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={() => handleAddSubscribe() }>Подписаться</Button> : \r\n                 <Button fullWidth variant=\"contained\" color=\"default\" onClick={() => handleDeleteSubscribe() }>Отписаться</Button>}\r\n                </div>\r\n                <div className={styles.Profile_discription}>\r\n                    <div className={styles.Profile_discription_title}>\r\n                     Описание канала:\r\n                    </div>\r\n                    <div className={styles.Profile_discription_text}>\r\n                     {infoProfile.userInfo.discription ? infoProfile.userInfo.discription : 'Описание отсутствует.'}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.Profile_fullnameblock}>\r\n                    <div className={styles.Profile_fullnameblock_title}>\r\n                     Автор:\r\n                    </div>\r\n                    <div className={styles.Profile_fullnameblock_name}>\r\n                       {infoProfile.userInfo.fullname}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.info_param}>\r\n                        <div className={classes.inputs_block_item_title}>\r\n                            Общие данные:\r\n                        </div>\r\n                        <div className={classes.info_param_items}>\r\n                            <div className={classes.info_param_item}>\r\n                                <div className={classes.info_param_item_icon}>\r\n                                    <img src={views} alt=\"\"/>\r\n                                </div>\r\n                                <div className={classes.info_param_item_text}>\r\n                                    <div className={classes.info_param_item_number}>\r\n                                        {infoProfile.views ? infoProfile.views : \"0\"}\r\n                                    </div>\r\n                                    <div className={classes.info_param_item_title}>\r\n                                        Просмотры видео автора\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.info_param_item}>\r\n                                <div className={classes.info_param_item_icon}>\r\n                                    <img src={subscriber} alt=\"\"/>\r\n                                </div>\r\n                                <div className={classes.info_param_item_text}>\r\n                                    <div className={classes.info_param_item_number}>\r\n                                    {infoProfile.subscribers ? infoProfile.subscribers : \"0\"}\r\n                                    </div>\r\n                                    <div className={classes.info_param_item_title}>\r\n                                        Количество подписчиков\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n\r\n               \r\n                </div>\r\n                <div className=\"playlists\">\r\n                    <div className={styles.title_playlists}>\r\n                        Плейлисты автора\r\n                    </div>\r\n                    <div className={styles.playlist_items}>\r\n                    {playlistItems && playlistItems.length > 0 ? playlistItems : \"В данный момент у автора отсутствуют плейлисты.\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <Snackbar open={show} anchorOrigin={{  vertical: 'top',\r\n          horizontal: 'center' }}>\r\n      <Alert severity=\"success\" >Вы успешно подписались на автора: {infoProfile.userInfo.username}</Alert>\r\n    </Snackbar>\r\n        </>\r\n    )\r\n}\r\n",["450","451"],"P:\\Diploma\\frontend\\src\\pages\\SubscribePage.jsx",["452","453","454","455"],"import React from 'react'\r\nimport { Button, createStyles, makeStyles,TextField,Theme } from '@material-ui/core'\r\nimport { Typography} from '@material-ui/core';\r\n\r\nimport { SubscribeItem } from '../components/SubscribeItem';\r\nimport { subscribeApi } from '../api/subscribeApi';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        maxWidth: '1300px',\r\n        margin: '0px auto'\r\n    },\r\n    Header: {\r\n        marginTop: '50px'\r\n    },\r\n    Header_title: {\r\n       fontWeight: '500',\r\n       fontSize: '26px',\r\n       lineHeight: '20px',\r\n       fontFamily: 'Roboto Condensed'\r\n    },\r\n    subscribe_items: {\r\n        marginTop: '20px',\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n  }),\r\n);\r\n\r\nconst SubscribePage = () => {\r\n\r\n\r\n    const classes = useStyles();\r\n    console.log(\"RERENDER\");\r\n    const [state, setState] = React.useCallback(React.useState({\r\n        users: undefined,\r\n    }));\r\n\r\n\r\n   \r\n\r\n\r\n    React.useEffect(() => {\r\n        subscribeApi.GetMySubscribe().then( res => setState({\r\n            users: res.data\r\n        }));\r\n  \r\n     }, [])\r\n\r\n \r\n\r\n\r\n  \r\n\r\n  \r\n\r\n \r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.Header}>\r\n            <Typography className={classes.Header_title}> \r\n               Мои подписки\r\n             </Typography>\r\n            </div>\r\n            <div className={classes.subscribe_items}>\r\n\r\n                {state.users && state.users.length > 0 ? state.users.map( el => <SubscribeItem  key={el.author._id + 599} _id={el.author._id} avatar={el.author.avatar} fullname={el.author.fullname} username={el.author.username}/>)\r\n                 : \"Вы не подписаны на авторов.\"}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscribePage\r\n",["456","457"],"P:\\Diploma\\frontend\\src\\components\\SubscribeItem\\index.tsx",["458"],"import React from 'react'\r\nimport { Button, createStyles, makeStyles,Theme } from '@material-ui/core'\r\nimport { Typography} from '@material-ui/core';\r\nimport avatarDefault from '../../assets/img/avatar.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n\r\n    subscribe_item: {\r\n        background: '#1C1C24',\r\n        borderRadius: '15px',\r\n        display: 'flex',\r\n        padding: '20px',\r\n        width: '260px',\r\n        marginRight: '20px',\r\n        marginBottom: '20px'\r\n    },\r\n    other_char: {\r\n        marginLeft: '15px'\r\n    },\r\n    subscribe_item_topic: {\r\n        marginBottom: '5px'\r\n    },\r\n    subscribe_item_topic_img: {\r\n       '& img': {\r\n           width: '100px',\r\n           height: '100px',\r\n           borderRadius: '50%',\r\n           objectFit: 'cover'\r\n       }\r\n    },\r\n    btn : {\r\n        marginTop: '5px',\r\n        textTransform: 'none'\r\n    }\r\n  }),\r\n);\r\n\r\nexport const SubscribeItem = ({_id, fullname, avatar, username} : any) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div className={classes.subscribe_item}>\r\n        <div className={classes.subscribe_item_topic}>\r\n            <div className={classes.subscribe_item_topic_img}>\r\n                <img src={avatar ? avatar : avatarDefault}  alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    <div className={classes.other_char}>\r\n    <div className={classes.subscribe_item_topic}>\r\n            Логин: <br /> {username}\r\n        </div>\r\n        <div className={classes.subscribe_item_topic}>\r\n            Полное имя: <br /> {fullname}\r\n        </div>\r\n        <Link to={\"/home/profile/\" + _id}>\r\n        <Button  variant=\"contained\" color=\"primary\" className={classes.btn}>Перейти</Button>    \r\n        </Link>\r\n    </div>\r\n    \r\n    </div>\r\n    )\r\n}\r\n",["459","460"],"P:\\Diploma\\frontend\\src\\pages\\FeedPage.jsx",["461","462","463"],"import React, { useState } from 'react';\r\nimport { Button, createStyles, makeStyles, Snackbar, TextField, Theme } from '@material-ui/core'\r\nimport { PopularItem } from '../components/PopularItem';\r\nimport { playlistsApi } from '../api/playlistsApi';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n     container: {\r\n        maxWidth: '1300px',\r\n        margin: '0px auto'\r\n   },\r\n   MostPopularBlock: {\r\n        marginTop: '50px',\r\n       \r\n   },\r\n   titleMostPopularBlock: {\r\n       fontWeight: '500',\r\n       fontSize: '26px',\r\n       lineHeight: '20px',\r\n       fontFamily: 'Roboto Condensed',\r\n       marginBottom: '20px'\r\n   },\r\n   OurFeed: {\r\n       display: 'flex',\r\n       flexDirection: 'column',\r\n       marginTop: '30px',\r\n       justifyСontent: 'center',\r\n       alignItems: 'center',\r\n      \r\n   },\r\n   ourFeed_Title: {\r\n    fontWeight: '500',\r\n    fontSize: '26px',\r\n    lineHeight: '20px',\r\n    fontFamily: 'Roboto Condensed',\r\n    marginBottom: '20px'\r\n   },\r\n   MostPupularItems: {\r\n       display: 'flex'\r\n   },\r\n   ourFeedItems: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center'\r\n\r\n   }\r\n\r\n\r\n  }),\r\n);\r\n\r\nconst FeedPage = () => {\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const [state, setstate] = useState({\r\n        popularPlaylists: undefined,\r\n    })\r\n\r\n    const [newPlaylists, setnewPlaylists] = useState({\r\n        newPlaylists: undefined,\r\n    })\r\n    \r\n  \r\n    React.useEffect( () => {\r\n        playlistsApi.GetPopularPlaylists().then( res => {\r\n            setstate({\r\n                popularPlaylists: res.data\r\n            })\r\n        });\r\n        playlistsApi.GetNewPlaylists().then( res => {\r\n            setnewPlaylists({\r\n                newPlaylists: res.data\r\n            })\r\n        }\r\n          \r\n        )\r\n    }, [])\r\n\r\n  \r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.MostPopularBlock}>\r\n                <div className={classes.titleMostPopularBlock}>\r\n                    Популярные курсы LearnSpecial\r\n                </div>\r\n                <div className={classes.MostPupularItems}>\r\n                    {state.popularPlaylists && state.popularPlaylists.map( item => <PopularItem _id={item._id} avatar={item.coverURL} createdAt={item.createdAt} title={item.title} views={item.popularity} username={item.owner.username}/>)}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.OurFeed}>\r\n                <div className={classes.ourFeed_Title}>\r\n                    Новинки интересующих вас авторов\r\n                </div>\r\n                <div className={classes.ourFeedItems}>\r\n                    {newPlaylists.newPlaylists && newPlaylists.newPlaylists.length > 0 ? newPlaylists.newPlaylists.map( item => <PopularItem _id={item._id} avatar={item.coverURL} createdAt={item.createdAt} title={item.title} views={item.popularity} username={item.owner.username}/>)\r\n                    : \"Вы не подписаны на авторов.\" }   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedPage\r\n",["464","465"],"P:\\Diploma\\frontend\\src\\components\\PopularItem\\index.tsx",[],"P:\\Diploma\\frontend\\src\\pages\\ChartPage.tsx",["466","467","468","469","470"],"import React from 'react'\r\nimport { createStyles, makeStyles,  Theme } from '@material-ui/core'\r\nimport { VictoryPie , VictoryChart, VictoryLine, VictoryTheme} from \"victory\";\r\nimport { playlistsApi } from '../api/playlistsApi';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n     container: {\r\n        maxWidth: '1300px',\r\n        margin: '0px auto'\r\n   },\r\n   items_chart: {\r\n       display: 'flex',\r\n       marginTop: '50px'\r\n   },\r\n   items_chart_title: {\r\n       textAlign: 'center'\r\n   }\r\n  }),\r\n);\r\n\r\nconst CharPage = () => {\r\n    const classes = useStyles();\r\n    const [chartstate, setchartstate] = React.useState({\r\n        viewsPlaylists: undefined\r\n    })\r\n    const [chartstate2, setchartstate2] = React.useState({\r\n        subscribersUsers: undefined\r\n    })\r\n\r\n    const [LoadState, setLoadState] = React.useState(false);\r\n\r\n\r\n    React.useEffect( () => {\r\n        playlistsApi.GetChartData().then( res => {\r\n            setLoadState(true);\r\n            setchartstate({\r\n                viewsPlaylists: res.data\r\n            })\r\n        })\r\n        \r\n\r\n   \r\n    }, [])\r\n\r\n    React.useEffect( () => {\r\n      playlistsApi.GetChartData2().then ( res => {\r\n        setchartstate2({\r\n            subscribersUsers: res.data\r\n        })\r\n    })\r\n    }, [])\r\n\r\n \r\n  \r\n\r\n  \r\n\r\n    return (\r\n        <div className={classes.container}>\r\n          <div className={classes.items_chart}>\r\n              {chartstate.viewsPlaylists && chartstate.viewsPlaylists.length > 0 ? <div className=\"item_chart\">\r\n                    <div className={classes.items_chart_title}>\r\n                        Количество просмотров\r\n                    </div>\r\n                <VictoryPie \r\n             style={{\r\n                labels: {\r\n                  fontSize: 18, fill: \"#ffffff\", zIndex: 3\r\n                }\r\n              }}\r\n            padAngle={({ datum }) => datum.x}\r\n            innerRadius={100}\r\n                width={850}\r\n                name = \"series-1\"\r\n                colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"navy\", \"#FF00FF\" ]}\r\n                startAngle={90}\r\n                endAngle={450}\r\n                labels={({ datum }) => `${datum.x}: ${String(datum.y)}`}\r\n                padAngle={({ datum }) => datum.x}\r\n               \r\n               \r\n                data={chartstate.viewsPlaylists}\r\n            />\r\n                </div> : \"\"}\r\n             {chartstate2.subscribersUsers && chartstate2.subscribersUsers.length > 0 ?   <div className=\"item_chart\">\r\n                <div className={classes.items_chart_title}>\r\n                        Соотношение пользователей и ваших подписчиков\r\n                    </div>\r\n                <VictoryPie \r\n             style={{\r\n                labels: {\r\n                  fontSize: 18, fill: \"#ffffff\", zIndex: 3\r\n                }\r\n              }}\r\n            innerRadius={100}\r\n                width={850}\r\n                name = \"series-1\"\r\n                colorScale={[\"purple\", \"#00FA9A\"  ]}\r\n                startAngle={90}\r\n                endAngle={450}\r\n                labels={({ datum }) => `${datum.x}: ${datum.y}`}\r\n                padAngle={({ datum }) => datum.x}\r\n                data={chartstate2.subscribersUsers}\r\n\r\n            />\r\n                </div> : \"Статистика отсутствует\"}\r\n            </div>\r\n        </div>\r\n        \r\n            \r\n  \r\n        \r\n    )\r\n}\r\n\r\nexport default CharPage\r\n","P:\\Diploma\\frontend\\src\\store\\ducks\\subscribes\\selectors.ts",[],"P:\\Diploma\\frontend\\src\\pages\\VerifyPage.tsx",["471","472"],"import React from 'react'\r\nimport { AuthApi } from '../api/authApi';\r\nimport {createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n     container: {\r\n        maxWidth: '1300px',\r\n        margin: '0px auto'\r\n   },\r\n   icon: {\r\n       color: 'green',\r\n       marginBottom: '10px'\r\n   },\r\n   iconfail: {\r\n    color: 'red',\r\n    marginBottom: '10px'\r\n},\r\n   group: {\r\n       textAlign: 'center',\r\n       marginTop: '25%'\r\n   },\r\n   text: {\r\n        fontSize: '20px'\r\n   }\r\n \r\n\r\n\r\n  }),\r\n);\r\n\r\nconst VerifyPage = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [verified, setverified] = React.useState(false);\r\n    const hash= window.location.search.split(\"hash=\")[1];\r\n\r\n    React.useEffect(() => {\r\n       if (hash){\r\n           AuthApi.Verify(hash).then( \r\n                res => {\r\n                    if (res.status === \"success\"){\r\n                        setverified(true);\r\n                     \r\n                    }\r\n\r\n                    \r\n               \r\n                }\r\n\r\n           )\r\n           setTimeout( () => {\r\n            history.push('/');\r\n        }, 3000)\r\n       }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.container}>\r\n                {verified ?  <div className={classes.group}>\r\n                    <div className={classes.icon}>\r\n                     <CheckCircleIcon fontSize=\"large\"/>\r\n                    </div>\r\n                    <div className={classes.text}>\r\n                        Аккаунт успешно активирован.\r\n                    </div>\r\n                </div>\r\n                : \r\n                <div className={classes.group}>\r\n                <div className={classes.iconfail}>\r\n                 <BlockIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className={classes.text}>\r\n                    Аккаунт не активирован, неверный хэш.\r\n                </div>\r\n            </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyPage\r\n",{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","replacedBy":"476"},{"ruleId":"473","replacedBy":"477"},{"ruleId":"475","replacedBy":"478"},{"ruleId":"473","replacedBy":"479"},{"ruleId":"475","replacedBy":"480"},{"ruleId":"473","replacedBy":"481"},{"ruleId":"475","replacedBy":"482"},{"ruleId":"483","severity":1,"message":"484","line":73,"column":11,"nodeType":"485","messageId":"486","endLine":73,"endColumn":17},{"ruleId":"483","severity":1,"message":"487","line":85,"column":11,"nodeType":"485","messageId":"486","endLine":85,"endColumn":23},{"ruleId":"488","severity":1,"message":"489","line":99,"column":8,"nodeType":"490","endLine":99,"endColumn":52,"suggestions":"491"},{"ruleId":"473","replacedBy":"479"},{"ruleId":"475","replacedBy":"480"},{"ruleId":"492","severity":1,"message":"493","line":5,"column":53,"nodeType":"485","messageId":"486","endLine":5,"endColumn":58},{"ruleId":"492","severity":1,"message":"494","line":5,"column":78,"nodeType":"485","messageId":"486","endLine":5,"endColumn":88},{"ruleId":"492","severity":1,"message":"495","line":19,"column":10,"nodeType":"485","messageId":"486","endLine":19,"endColumn":22},{"ruleId":"492","severity":1,"message":"496","line":21,"column":8,"nodeType":"485","messageId":"486","endLine":21,"endColumn":18},{"ruleId":"492","severity":1,"message":"497","line":59,"column":11,"nodeType":"485","messageId":"486","endLine":59,"endColumn":20},{"ruleId":"492","severity":1,"message":"498","line":68,"column":11,"nodeType":"485","messageId":"486","endLine":68,"endColumn":21},{"ruleId":"473","replacedBy":"499"},{"ruleId":"475","replacedBy":"500"},{"ruleId":"473","replacedBy":"501"},{"ruleId":"475","replacedBy":"502"},{"ruleId":"473","replacedBy":"503"},{"ruleId":"475","replacedBy":"504"},{"ruleId":"492","severity":1,"message":"505","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":18},{"ruleId":"473","replacedBy":"506"},{"ruleId":"475","replacedBy":"507"},{"ruleId":"492","severity":1,"message":"505","line":2,"column":8,"nodeType":"485","messageId":"486","endLine":2,"endColumn":16},{"ruleId":"492","severity":1,"message":"508","line":4,"column":10,"nodeType":"485","messageId":"486","endLine":4,"endColumn":25},{"ruleId":"492","severity":1,"message":"509","line":5,"column":27,"nodeType":"485","messageId":"486","endLine":5,"endColumn":51},{"ruleId":"473","replacedBy":"510"},{"ruleId":"475","replacedBy":"511"},{"ruleId":"492","severity":1,"message":"512","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":26},{"ruleId":"492","severity":1,"message":"513","line":8,"column":30,"nodeType":"485","messageId":"486","endLine":8,"endColumn":49},{"ruleId":"492","severity":1,"message":"514","line":10,"column":10,"nodeType":"485","messageId":"486","endLine":10,"endColumn":19},{"ruleId":"492","severity":1,"message":"515","line":108,"column":11,"nodeType":"485","messageId":"486","endLine":108,"endColumn":18},{"ruleId":"473","replacedBy":"516"},{"ruleId":"475","replacedBy":"517"},{"ruleId":"492","severity":1,"message":"494","line":4,"column":8,"nodeType":"485","messageId":"486","endLine":4,"endColumn":18},{"ruleId":"492","severity":1,"message":"515","line":26,"column":9,"nodeType":"485","messageId":"486","endLine":26,"endColumn":16},{"ruleId":"492","severity":1,"message":"518","line":1,"column":10,"nodeType":"485","messageId":"486","endLine":1,"endColumn":45},{"ruleId":"492","severity":1,"message":"519","line":6,"column":10,"nodeType":"485","messageId":"486","endLine":6,"endColumn":26},{"ruleId":"473","replacedBy":"520"},{"ruleId":"475","replacedBy":"521"},{"ruleId":"473","replacedBy":"516"},{"ruleId":"475","replacedBy":"517"},{"ruleId":"473","replacedBy":"522"},{"ruleId":"475","replacedBy":"523"},{"ruleId":"473","replacedBy":"510"},{"ruleId":"475","replacedBy":"511"},{"ruleId":"492","severity":1,"message":"524","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":22},{"ruleId":"492","severity":1,"message":"525","line":2,"column":24,"nodeType":"485","messageId":"486","endLine":2,"endColumn":36},{"ruleId":"526","severity":1,"message":"527","line":62,"column":36,"nodeType":"528","messageId":"529","endLine":62,"endColumn":38},{"ruleId":"492","severity":1,"message":"530","line":65,"column":10,"nodeType":"485","messageId":"486","endLine":65,"endColumn":29},{"ruleId":"492","severity":1,"message":"531","line":72,"column":9,"nodeType":"485","messageId":"486","endLine":72,"endColumn":16},{"ruleId":"483","severity":1,"message":"532","line":23,"column":11,"nodeType":"485","messageId":"486","endLine":23,"endColumn":24},{"ruleId":"488","severity":1,"message":"533","line":46,"column":12,"nodeType":"490","endLine":46,"endColumn":22,"suggestions":"534"},{"ruleId":"473","replacedBy":"535"},{"ruleId":"475","replacedBy":"536"},{"ruleId":"473","replacedBy":"537"},{"ruleId":"475","replacedBy":"538"},{"ruleId":"473","replacedBy":"539"},{"ruleId":"475","replacedBy":"540"},{"ruleId":"541","severity":1,"message":"542","line":17,"column":1,"nodeType":"543","endLine":17,"endColumn":106},{"ruleId":"473","replacedBy":"544"},{"ruleId":"475","replacedBy":"545"},{"ruleId":"492","severity":1,"message":"546","line":3,"column":10,"nodeType":"485","messageId":"486","endLine":3,"endColumn":15},{"ruleId":"492","severity":1,"message":"547","line":1,"column":17,"nodeType":"485","messageId":"486","endLine":1,"endColumn":30},{"ruleId":"492","severity":1,"message":"548","line":4,"column":8,"nodeType":"485","messageId":"486","endLine":4,"endColumn":12},{"ruleId":"492","severity":1,"message":"549","line":13,"column":10,"nodeType":"485","messageId":"486","endLine":13,"endColumn":23},{"ruleId":"550","severity":1,"message":"551","line":82,"column":14,"nodeType":"552","endLine":82,"endColumn":76},{"ruleId":"550","severity":1,"message":"551","line":89,"column":13,"nodeType":"552","endLine":89,"endColumn":72},{"ruleId":"492","severity":1,"message":"553","line":3,"column":37,"nodeType":"485","messageId":"486","endLine":3,"endColumn":45},{"ruleId":"488","severity":1,"message":"554","line":33,"column":6,"nodeType":"490","endLine":33,"endColumn":8,"suggestions":"555"},{"ruleId":"488","severity":1,"message":"556","line":54,"column":8,"nodeType":"490","endLine":54,"endColumn":10,"suggestions":"557"},{"ruleId":"473","replacedBy":"506"},{"ruleId":"475","replacedBy":"507"},{"ruleId":"473","replacedBy":"558"},{"ruleId":"475","replacedBy":"559"},{"ruleId":"492","severity":1,"message":"560","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":42},{"ruleId":"492","severity":1,"message":"561","line":2,"column":8,"nodeType":"485","messageId":"486","endLine":2,"endColumn":14},{"ruleId":"492","severity":1,"message":"562","line":14,"column":8,"nodeType":"485","messageId":"486","endLine":14,"endColumn":18},{"ruleId":"488","severity":1,"message":"563","line":95,"column":8,"nodeType":"490","endLine":95,"endColumn":23,"suggestions":"564"},{"ruleId":"492","severity":1,"message":"565","line":2,"column":8,"nodeType":"485","messageId":"486","endLine":2,"endColumn":31},{"ruleId":"473","replacedBy":"566"},{"ruleId":"475","replacedBy":"567"},{"ruleId":"483","severity":1,"message":"568","line":5,"column":11,"nodeType":"485","messageId":"486","endLine":5,"endColumn":28},{"ruleId":"483","severity":1,"message":"569","line":5,"column":30,"nodeType":"485","messageId":"486","endLine":5,"endColumn":50},{"ruleId":"488","severity":1,"message":"489","line":78,"column":8,"nodeType":"490","endLine":78,"endColumn":10,"suggestions":"570"},{"ruleId":"473","replacedBy":"503"},{"ruleId":"475","replacedBy":"504"},{"ruleId":"492","severity":1,"message":"571","line":6,"column":10,"nodeType":"485","messageId":"486","endLine":6,"endColumn":26},{"ruleId":"488","severity":1,"message":"572","line":49,"column":6,"nodeType":"490","endLine":49,"endColumn":8,"suggestions":"573"},{"ruleId":"492","severity":1,"message":"574","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":26},{"ruleId":"473","replacedBy":"575"},{"ruleId":"475","replacedBy":"576"},{"ruleId":"492","severity":1,"message":"577","line":4,"column":8,"nodeType":"485","messageId":"486","endLine":4,"endColumn":15},{"ruleId":"492","severity":1,"message":"578","line":8,"column":10,"nodeType":"485","messageId":"486","endLine":8,"endColumn":20},{"ruleId":"492","severity":1,"message":"579","line":8,"column":22,"nodeType":"485","messageId":"486","endLine":8,"endColumn":32},{"ruleId":"492","severity":1,"message":"580","line":8,"column":34,"nodeType":"485","messageId":"486","endLine":8,"endColumn":39},{"ruleId":"492","severity":1,"message":"581","line":9,"column":10,"nodeType":"485","messageId":"486","endLine":9,"endColumn":13},{"ruleId":"492","severity":1,"message":"494","line":4,"column":8,"nodeType":"485","messageId":"486","endLine":4,"endColumn":18},{"ruleId":"492","severity":1,"message":"582","line":5,"column":8,"nodeType":"485","messageId":"486","endLine":5,"endColumn":14},{"ruleId":"492","severity":1,"message":"583","line":6,"column":8,"nodeType":"485","messageId":"486","endLine":6,"endColumn":16},{"ruleId":"492","severity":1,"message":"584","line":14,"column":10,"nodeType":"485","messageId":"486","endLine":14,"endColumn":16},{"ruleId":"492","severity":1,"message":"585","line":16,"column":10,"nodeType":"485","messageId":"486","endLine":16,"endColumn":20},{"ruleId":"488","severity":1,"message":"586","line":20,"column":7,"nodeType":"490","endLine":20,"endColumn":15,"suggestions":"587"},{"ruleId":"492","severity":1,"message":"588","line":155,"column":12,"nodeType":"485","messageId":"486","endLine":155,"endColumn":26},{"ruleId":"483","severity":1,"message":"589","line":3,"column":54,"nodeType":"485","messageId":"486","endLine":3,"endColumn":63},{"ruleId":"483","severity":1,"message":"590","line":82,"column":12,"nodeType":"485","messageId":"486","endLine":82,"endColumn":24},{"ruleId":"488","severity":1,"message":"591","line":92,"column":8,"nodeType":"490","endLine":92,"endColumn":10,"suggestions":"592"},{"ruleId":"473","replacedBy":"499"},{"ruleId":"475","replacedBy":"500"},{"ruleId":"483","severity":1,"message":"582","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":16},{"ruleId":"483","severity":1,"message":"589","line":2,"column":43,"nodeType":"485","messageId":"486","endLine":2,"endColumn":52},{"ruleId":"488","severity":1,"message":"593","line":41,"column":31,"nodeType":"594","endLine":41,"endColumn":48},{"ruleId":"488","severity":1,"message":"595","line":54,"column":9,"nodeType":"490","endLine":54,"endColumn":11,"suggestions":"596"},{"ruleId":"473","replacedBy":"522"},{"ruleId":"475","replacedBy":"523"},{"ruleId":"492","severity":1,"message":"494","line":3,"column":10,"nodeType":"485","messageId":"486","endLine":3,"endColumn":20},{"ruleId":"473","replacedBy":"597"},{"ruleId":"475","replacedBy":"598"},{"ruleId":"483","severity":1,"message":"582","line":2,"column":10,"nodeType":"485","messageId":"486","endLine":2,"endColumn":16},{"ruleId":"483","severity":1,"message":"599","line":2,"column":44,"nodeType":"485","messageId":"486","endLine":2,"endColumn":52},{"ruleId":"483","severity":1,"message":"589","line":2,"column":54,"nodeType":"485","messageId":"486","endLine":2,"endColumn":63},{"ruleId":"473","replacedBy":"501"},{"ruleId":"475","replacedBy":"502"},{"ruleId":"492","severity":1,"message":"600","line":3,"column":23,"nodeType":"485","messageId":"486","endLine":3,"endColumn":35},{"ruleId":"492","severity":1,"message":"601","line":3,"column":37,"nodeType":"485","messageId":"486","endLine":3,"endColumn":48},{"ruleId":"492","severity":1,"message":"602","line":3,"column":50,"nodeType":"485","messageId":"486","endLine":3,"endColumn":62},{"ruleId":"492","severity":1,"message":"603","line":34,"column":12,"nodeType":"485","messageId":"486","endLine":34,"endColumn":21},{"ruleId":"604","severity":1,"message":"605","line":83,"column":17,"nodeType":"606","endLine":83,"endColumn":50},{"ruleId":"492","severity":1,"message":"553","line":4,"column":10,"nodeType":"485","messageId":"486","endLine":4,"endColumn":18},{"ruleId":"488","severity":1,"message":"607","line":62,"column":8,"nodeType":"490","endLine":62,"endColumn":10,"suggestions":"608"},"no-native-reassign",["609"],"no-negated-in-lhs",["610"],["609"],["610"],["609"],["610"],["609"],["610"],"no-unused-vars","'Status' is assigned a value but never used.","Identifier","unusedVar","'UpdateStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["611"],"@typescript-eslint/no-unused-vars","'Input' is defined but never used.","'Typography' is defined but never used.","'Notification' is defined but never used.","'classNames' is defined but never used.","'FadeProps' is defined but never used.","'ModalProps' is defined but never used.",["609"],["610"],["609"],["610"],["609"],["610"],"'Playlist' is defined but never used.",["609"],["610"],"'UserActionsType' is defined but never used.","'setPlaylistsLoadingState' is defined but never used.",["609"],["610"],"'useEffect' is defined but never used.","'fetchUpdatePlaylist' is defined but never used.","'FormState' is defined but never used.","'classes' is assigned a value but never used.",["609"],["610"],"'fetchSetAllUsersDataActionInterface' is defined but never used.","'selectUserStatus' is defined but never used.",["609"],["610"],["609"],["610"],"'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'openNotificationRef' is assigned a value but never used.","'history' is assigned a value but never used.","'LoadingStatus' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'playlistID'. Either include them or remove the dependency array.",["612"],["609"],["610"],["609"],["610"],["609"],["610"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["609"],["610"],"'Video' is defined but never used.","'KeyboardEvent' is defined but never used.","'like' is defined but never used.","'AnyAaaaRecord' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'checkAuth'. Either include it or remove the dependency array.",["613"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'handleVisitVideo', and 'videoID'. Either include them or remove the dependency array.",["614"],["609"],["610"],"'fetchDeleteVideosActionInterface' is defined but never used.","'Select' is defined but never used.","'SelectType' is defined but never used.","React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["615"],"'CollectionsBookmarkIcon' is defined but never used.",["609"],["610"],"'FetchAddSubscribe' is defined but never used.","'FetchDeleteSubscribe' is defined but never used.",["616"],"'SelectSubscribes' is defined but never used.","React Hook React.useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.",["617"],"'SubscribeActions' is defined but never used.",["609"],["610"],"'dropbtn' is defined but never used.","'IconButton' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'red' is defined but never used.","'Button' is defined but never used.","'editmenu' is defined but never used.","'Height' is defined but never used.","'ClearStore' is defined but never used.","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["618"],"'selectCoverUrl' is assigned a value but never used.","'TextField' is defined but never used.","'Loadingstate' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["619"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","React Hook React.useEffect has a missing dependency: 'setState'. Either include it or remove the dependency array.",["620"],["609"],["610"],"'Snackbar' is defined but never used.","'VictoryChart' is defined but never used.","'VictoryLine' is defined but never used.","'VictoryTheme' is defined but never used.","'LoadState' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook React.useEffect has missing dependencies: 'hash' and 'history'. Either include them or remove the dependency array.",["621"],"no-global-assign","no-unsafe-negation",{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},"Update the dependencies array to be: [AddStatus, DeleteStatus, dispatch, updateStatusLocal]",{"range":"644","text":"645"},"Update the dependencies array to be: [dispatch, modalAdd, playlistID]",{"range":"646","text":"647"},"Update the dependencies array to be: [checkAuth]",{"range":"648","text":"649"},"Update the dependencies array to be: [dispatch, handleVisitVideo, videoID]",{"range":"650","text":"651"},"Update the dependencies array to be: [loadingStatus, onClose]",{"range":"652","text":"653"},"Update the dependencies array to be: [dispatch]",{"range":"654","text":"655"},"Update the dependencies array to be: [_id]",{"range":"656","text":"657"},"Update the dependencies array to be: [history, isAuth]",{"range":"658","text":"659"},"Update the dependencies array to be: [userID]",{"range":"660","text":"661"},"Update the dependencies array to be: [setState]",{"range":"662","text":"663"},"Update the dependencies array to be: [hash, history]",{"range":"664","text":"665"},[3198,3242],"[AddStatus, DeleteStatus, dispatch, updateStatusLocal]",[1323,1333],"[dispatch, modalAdd, playlistID]",[1007,1009],"[checkAuth]",[1595,1597],"[dispatch, handleVisitVideo, videoID]",[3125,3140],"[loadingStatus, onClose]",[2363,2365],"[dispatch]",[1559,1561],"[_id]",[529,537],"[history, isAuth]",[2777,2779],"[userID]",[1180,1182],"[setState]",[1446,1448],"[hash, history]"]